{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table table-dark\"\n};\nconst _hoisted_2 = {\n  class: \"p-3\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"p-3\"\n  }, \"e\"), _createElementVNode(\"th\", null, \"Product Nam\"), _createElementVNode(\"th\", null, \"Supplier\"), _createElementVNode(\"th\", null, \"Supplier Id\"), _createElementVNode(\"th\", null, \"Quantity\"), _createElementVNode(\"th\", null, \"Unit Price\"), _createElementVNode(\"th\", null, \"Delete\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.stocks, (stock, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", _hoisted_2, _toDisplayString(stock.product_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(stock.supplier_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(stock.supplier_id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(stock.quantity), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(stock.unit_price), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-danger\",\n      onClick: $event => $options.removeStock(stock.stock_id)\n    }, \"Remove\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","stocks","stock","index","key","_hoisted_2","_toDisplayString","product_name","supplier_name","supplier_id","quantity","unit_price","onClick","$event","$options","removeStock","stock_id","_hoisted_3"],"sources":["C:\\Users\\Polisoft WEB\\Documents\\MuhasebeProgrami\\clientapp\\src\\components\\Stocks\\StockDeleteComponent.vue"],"sourcesContent":["<template>\n    <table class=\"table table-dark\">\n       <thead>\n         <tr>\n           <th class=\"p-3\">e</th>\n           <th>Product Nam</th>\n           <th>Supplier</th>\n           <th>Supplier Id</th>\n           <th>Quantity</th>\n           <th>Unit Price</th>\n           <th>Delete</th>\n         </tr>\n       </thead>\n       <tbody>\n         <tr v-for=\"(stock, index) in stocks\" :key=\"index\">\n           <td class=\"p-3\">{{ stock.product_name }}</td>\n           <td>{{ stock.supplier_name}}</td>\n           <td>{{ stock.supplier_id}}</td>\n           <td>{{ stock.quantity }}</td>\n           <td>{{ stock.unit_price }}</td>\n           <td><button class=\"btn btn-danger\" @click=\"removeStock(stock.stock_id)\">Remove</button></td>\n         </tr>\n       </tbody>\n     </table>\n </template>\n<script>\nimport axios from 'axios';\nimport swal from 'sweetalert';\nexport default {\n    name: \"StockDeleteComponent\",\n    data(){\n        return{\n            stocks:[]\n        }\n    },\n    mounted() {\n     this.getStock();\n     },\n     methods:{\n        getStock(){\n             axios.get('http://localhost:5280/api/stock/stock-get')\n             .then(response => {\n               if(response != null && response.data != null)\n                 this.stocks = response.data;\n             })\n             .catch(error => {\n               swal({title:\"Stocks not listed\",text: \"error when listing stock\",icon:\"warning\",dangerMode:true})\n             console.error(\"stocks not get\", error);\n             });\n        },\n        removeStock(stockId){\n            axios.delete('http://localhost:5280/api/stock/stock-delete', {\n                data: { stock_id: stockId }, \n                headers: {'Content-Type': 'application/json'}\n            })\n            .then(response => {\n                console.log(response.data.token);\n                if(response.data.token.length===36){\n                this.getStock(); \n                swal({ title: \"Successfully Deleted\", text: \"Stock has been deleted successfully.\", con: \"success\" });\n            }})\n            .catch(error => {\n                console.error(\"Error deleting stock:\", error);\n                swal({ title: \"Error\", text: \"There was an error deleting the stock.\", icon: \"error\" });\n            });\n        }\n    }\n}\n</script>\n<style>\n\n</style>"],"mappings":";;EACWA,KAAK,EAAC;AAAkB;;EAcpBA,KAAK,EAAC;AAAK;mBAf1B;;uBACIC,mBAAA,CAsBS,SAtBTC,UAsBS,G,0BArBNC,mBAAA,CAUQ,gBATNA,mBAAA,CAQK,aAPHA,mBAAA,CAAsB;IAAlBH,KAAK,EAAC;EAAK,GAAC,GAAC,GACjBG,mBAAA,CAAoB,YAAhB,aAAW,GACfA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAoB,YAAhB,aAAW,GACfA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAe,YAAX,QAAM,E,wBAGdA,mBAAA,CASQ,iB,kBARNF,mBAAA,CAOKG,SAAA,QArBdC,WAAA,CAcsCC,KAAA,CAAAC,MAAM,EAd5C,CAcqBC,KAAK,EAAEC,KAAK;yBAAxBR,mBAAA,CAOK;MAPiCS,GAAG,EAAED;IAAK,IAC9CN,mBAAA,CAA6C,MAA7CQ,UAA6C,EAAAC,gBAAA,CAA1BJ,KAAK,CAACK,YAAY,kBACrCV,mBAAA,CAAiC,YAAAS,gBAAA,CAA1BJ,KAAK,CAACM,aAAa,kBAC1BX,mBAAA,CAA+B,YAAAS,gBAAA,CAAxBJ,KAAK,CAACO,WAAW,kBACxBZ,mBAAA,CAA6B,YAAAS,gBAAA,CAAtBJ,KAAK,CAACQ,QAAQ,kBACrBb,mBAAA,CAA+B,YAAAS,gBAAA,CAAxBJ,KAAK,CAACS,UAAU,kBACvBd,mBAAA,CAA4F,aAAxFA,mBAAA,CAAmF;MAA3EH,KAAK,EAAC,gBAAgB;MAAEkB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACb,KAAK,CAACc,QAAQ;OAAG,QAAM,iBApBzFC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}