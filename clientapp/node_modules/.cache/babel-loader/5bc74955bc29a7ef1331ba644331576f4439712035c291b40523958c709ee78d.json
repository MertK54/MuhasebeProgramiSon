{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, normalizeClass as _normalizeClass, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"mb-3\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[5] || (_cache[5] = _createStaticVNode(\"<h1>Create Customer</h1><form class=\\\"mx-auto my-3 p-5\\\" style=\\\"width:50rem;border:1px solid grey;\\\"><div class=\\\"col-md-6\\\"><label for=\\\"validationDefault01\\\" class=\\\"form-label\\\">Name</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationDefault01\\\" required></div><div class=\\\"col-md-6\\\"><label for=\\\"validationDefault02\\\" class=\\\"form-label\\\">Email</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationDefault02\\\" required></div><div class=\\\"col-md-6\\\"><label for=\\\"validationDefault03\\\" class=\\\"form-label\\\">Phone</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationDefault03\\\" required></div><div class=\\\"col-md-6\\\"><label for=\\\"validationDefault03\\\" class=\\\"form-label\\\">Adress</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationDefault03\\\" required></div><div class=\\\"col-6\\\"><div class=\\\"form-check\\\"><input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" id=\\\"invalidCheck2\\\" required><label class=\\\"form-check-label\\\" for=\\\"invalidCheck2\\\"> Agree to terms and conditions </label></div></div><div class=\\\"col-6\\\"><button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Submit form</button></div></form>\", 2)), _createElementVNode(\"template\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.validateForm && _ctx.validateForm(...args), [\"prevent\"])),\n    novalidate: \"\",\n    class: _normalizeClass({\n      'was-validated': _ctx.isValidated\n    }),\n    ref: \"form\"\n  }, [_createElementVNode(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    for: \"exampleInput\",\n    class: \"form-label\"\n  }, \"Example Input\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"exampleInput\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.exampleInput = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.exampleInput]]), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"invalid-feedback\"\n  }, \" Please provide a valid input. \", -1 /* HOISTED */))]), _cache[4] || (_cache[4] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Submit\", -1 /* HOISTED */))], 34 /* CLASS, NEED_HYDRATION */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createStaticVNode","_createElementVNode","onSubmit","_cache","_withModifiers","args","_ctx","validateForm","novalidate","_normalizeClass","isValidated","ref","_hoisted_1","for","type","id","$event","exampleInput","required"],"sources":["C:\\Users\\Polisoft WEB\\Desktop\\MuhasebeProgrami\\MuhasebeProgrami\\clientapp\\src\\components\\Customer\\CustomerCreateComponent.vue"],"sourcesContent":["<template>\r\n    <h1>Create Customer</h1>\r\n    <form class=\"mx-auto my-3 p-5\" style=\"width: 50rem;border: 1px solid grey;\">\r\n        <div class=\"col-md-6\">\r\n            <label for=\"validationDefault01\" class=\"form-label\">Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"validationDefault01\" required>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <label for=\"validationDefault02\" class=\"form-label\">Email</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"validationDefault02\" required>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <label for=\"validationDefault03\" class=\"form-label\">Phone</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"validationDefault03\" required>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <label for=\"validationDefault03\" class=\"form-label\">Adress</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"validationDefault03\" required>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck2\" required>\r\n            <label class=\"form-check-label\" for=\"invalidCheck2\">\r\n                Agree to terms and conditions\r\n            </label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <button class=\"btn btn-primary\" type=\"submit\">Submit form</button>\r\n        </div>\r\n    </form>\r\n    <template>\r\n  <form @submit.prevent=\"validateForm\" novalidate :class=\"{ 'was-validated': isValidated }\" ref=\"form\">\r\n    <div class=\"mb-3\">\r\n      <label for=\"exampleInput\" class=\"form-label\">Example Input</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"exampleInput\"\r\n        v-model=\"exampleInput\"\r\n        required\r\n      />\r\n      <div class=\"invalid-feedback\">\r\n        Please provide a valid input.\r\n      </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\n\r\n</script>\r\n\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"CustomerCreateComponent\",\r\n  data() {\r\n    return {\r\n      exampleInput: '',\r\n      isValidated: false\r\n    };\r\n  },\r\n  methods: {\r\n    validateForm() {\r\n      const form = this.$refs.form;\r\n      if (form.checkValidity()) {\r\n        // Form is valid, proceed with submission\r\n        this.isValidated = true;\r\n        console.log(\"Form submitted successfully\");\r\n      } else {\r\n        // Form is invalid, prevent submission\r\n        this.isValidated = true;\r\n        console.log(\"Form is invalid\");\r\n      }\r\n    }\r\n  }\r\n};\r\n}\r\n\r\n</script>\r\n<style>\r\n\r\n</style>"],"mappings":";;EAiCSA,KAAK,EAAC;AAAM;;uBAjCrBC,mBAAA,CAAAC,SAAA,S,0BAAAC,kBAAA,2pCA+BIC,mBAAA,CAiBO,mBAhBTA,mBAAA,CAeO;IAfAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAhCfC,cAAA,KAAAC,IAAA,KAgCyBC,IAAA,CAAAC,YAAA,IAAAD,IAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAEG,UAAU,EAAV,EAAU;IAAEX,KAAK,EAhCxDY,eAAA;MAAA,iBAgC6EH,IAAA,CAAAI;IAAW;IAAIC,GAAG,EAAC;MAC5FV,mBAAA,CAYM,OAZNW,UAYM,G,0BAXJX,mBAAA,CAAkE;IAA3DY,GAAG,EAAC,cAAc;IAAChB,KAAK,EAAC;KAAa,eAAa,sB,gBAC1DI,mBAAA,CAME;IALAa,IAAI,EAAC,MAAM;IACXjB,KAAK,EAAC,cAAc;IACpBkB,EAAE,EAAC,cAAc;IAtCzB,uBAAAZ,MAAA,QAAAA,MAAA,MAAAa,MAAA,IAuCiBV,IAAA,CAAAW,YAAY,GAAAD,MAAA;IACrBE,QAAQ,EAAR;iDADSZ,IAAA,CAAAW,YAAY,E,6BAGvBhB,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAkB,GAAC,iCAE9B,qB,6BAEFI,mBAAA,CAA6D;IAArDa,IAAI,EAAC,QAAQ;IAACjB,KAAK,EAAC;KAAkB,QAAM,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}