{"ast":null,"code":"import axios from 'axios';\nimport { Modal } from 'bootstrap';\nexport default {\n  name: \"CustomerUpdateComponent\",\n  data() {\n    return {\n      customers: [],\n      selectedCustomer: {}\n    };\n  },\n  mounted() {\n    this.getCustomer();\n  },\n  methods: {\n    getCustomer() {\n      axios.get('http://localhost:5280/api/customer/customer-get').then(response => {\n        this.customers = response.data;\n      }).catch(error => {\n        console.log(\"Customers Not Get\", error);\n      });\n    },\n    openUpdateModal(customer) {\n      this.selectedCustomer = {\n        ...customer\n      };\n      const modal = new Modal(document.getElementById('updateModal'));\n      modal.show();\n    },\n    updateCustomer() {\n      axios.post(\"http://localhost:5280/api/customer/customer-update\", this.selectedCustomer).then(response => {\n        if (response.data.token.length === 36) {\n          console.log(\"Customer updated\", response.data);\n          this.getCustomer();\n          const modal = Modal.getInstance(document.getElementById('updateModal'));\n          modal.hide();\n        }\n      }).catch(error => {\n        console.log(\"Update fail\", error);\n        swal({\n          title: \"Customer not updated\",\n          text: \"Error when updated customer\",\n          icon: \"warning\",\n          dangerMode: true\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Modal","name","data","customers","selectedCustomer","mounted","getCustomer","methods","get","then","response","catch","error","console","log","openUpdateModal","customer","modal","document","getElementById","show","updateCustomer","post","token","length","getInstance","hide","swal","title","text","icon","dangerMode"],"sources":["/Users/mertkezer/Documents/MuhasebeProgrami/clientapp/src/components/Customer/CustomerUpdateComponent.vue"],"sourcesContent":["<template>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Phone</th>\n                <th>Address</th>\n                <th>Update</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"(customer, index) in customers\" :key=\"index\">\n                <td>{{ customer.name }}</td>\n                <td>{{ customer.e_mail }}</td>\n                <td>{{ customer.phone_number }}</td>\n                <td>{{ customer.adress }}</td>\n                <td><button class=\"btn btn-primary\" @click=\"openUpdateModal(customer)\">Update</button></td>\n            </tr>\n        </tbody>\n    </table>\n    <div class=\"modal fade\" id=\"updateModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\">Update Customer</h5>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <form @submit.prevent=\"updateCustomer\">\n                        <div class=\"mb-3\">\n                            <label for=\"name\" class=\"form-label\">Name</label>\n                            <input type=\"text\" v-model=\"selectedCustomer.name\" class=\"form-control\" id=\"name\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"email\" class=\"form-label\">Email</label>\n                            <input type=\"email\" v-model=\"selectedCustomer.e_mail\" class=\"form-control\" id=\"email\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"phone\" class=\"form-label\">Phone</label>\n                            <input type=\"text\" v-model=\"selectedCustomer.phone_number\" class=\"form-control\" id=\"phone\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"address\" class=\"form-label\">Address</label>\n                            <input type=\"text\" v-model=\"selectedCustomer.adress\" class=\"form-control\" id=\"address\">\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { Modal } from 'bootstrap';\n\nexport default {\n    name: \"CustomerUpdateComponent\",\n    data() {\n        return {\n            customers: [],\n            selectedCustomer: {}\n        }\n    },\n    mounted() {\n        this.getCustomer();\n    },\n    methods: {\n        getCustomer() {\n            axios.get('http://localhost:5280/api/customer/customer-get')\n                .then(response => {\n                    this.customers = response.data;\n                })\n                .catch(error => {\n                    console.log(\"Customers Not Get\", error);\n                });\n        },\n        openUpdateModal(customer) {\n            this.selectedCustomer = { ...customer };\n            const modal = new Modal(document.getElementById('updateModal'));\n            modal.show();\n        },\n        updateCustomer() {\n            axios.post(\"http://localhost:5280/api/customer/customer-update\", this.selectedCustomer)\n                .then(response => {\n                    if(response.data.token.length===36){\n                        console.log(\"Customer updated\", response.data);\n                        this.getCustomer();\n                        const modal = Modal.getInstance(document.getElementById('updateModal'));\n                        modal.hide();\n                    }\n                })\n                .catch(error => {\n                    console.log(\"Update fail\", error);\n                    swal({\n                        title: \"Customer not updated\",\n                        text: \"Error when updated customer\",\n                        icon: \"warning\",\n                        dangerMode: true\n                    });\n                });\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":"AAuDA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,KAAI,QAAS,WAAW;AAEjC,eAAe;EACXC,IAAI,EAAE,yBAAyB;EAC/BC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,gBAAgB,EAAE,CAAC;IACvB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,WAAW,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACLD,WAAWA,CAAA,EAAG;MACVP,KAAK,CAACS,GAAG,CAAC,iDAAiD,EACtDC,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACP,SAAQ,GAAIO,QAAQ,CAACR,IAAI;MAClC,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAAC;MAC3C,CAAC,CAAC;IACV,CAAC;IACDG,eAAeA,CAACC,QAAQ,EAAE;MACtB,IAAI,CAACZ,gBAAe,GAAI;QAAE,GAAGY;MAAS,CAAC;MACvC,MAAMC,KAAI,GAAI,IAAIjB,KAAK,CAACkB,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAAC;MAC/DF,KAAK,CAACG,IAAI,CAAC,CAAC;IAChB,CAAC;IACDC,cAAcA,CAAA,EAAG;MACbtB,KAAK,CAACuB,IAAI,CAAC,oDAAoD,EAAE,IAAI,CAAClB,gBAAgB,EACjFK,IAAI,CAACC,QAAO,IAAK;QACd,IAAGA,QAAQ,CAACR,IAAI,CAACqB,KAAK,CAACC,MAAM,KAAG,EAAE,EAAC;UAC/BX,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,QAAQ,CAACR,IAAI,CAAC;UAC9C,IAAI,CAACI,WAAW,CAAC,CAAC;UAClB,MAAMW,KAAI,GAAIjB,KAAK,CAACyB,WAAW,CAACP,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAAC;UACvEF,KAAK,CAACS,IAAI,CAAC,CAAC;QAChB;MACJ,CAAC,EACAf,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,KAAK,CAAC;QACjCe,IAAI,CAAC;UACDC,KAAK,EAAE,sBAAsB;UAC7BC,IAAI,EAAE,6BAA6B;UACnCC,IAAI,EAAE,SAAS;UACfC,UAAU,EAAE;QAChB,CAAC,CAAC;MACN,CAAC,CAAC;IACV;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}