{"ast":null,"code":"import axios from 'axios';\nimport vSelect from 'vue-select';\nimport 'vue-select/dist/vue-select.css';\nimport swal from 'sweetalert';\nexport default {\n  name: \"InvoiceSaleComponent\",\n  components: {\n    vSelect\n  },\n  data() {\n    return {\n      formData: {\n        customer_id: null,\n        supplier_id: null,\n        product_name: '',\n        quantity: 0,\n        unit_price: 0.00,\n        total_amount: 0.00,\n        invoice_type: 'sale'\n      },\n      supplier: [],\n      data: [],\n      stocks: [],\n      customer: [],\n      currentStock\n    };\n  },\n  created() {\n    this.getCustomer();\n    this.getStock();\n  },\n  watch: {\n    'formData.product_name'(newValue) {\n      this.currentStock = this.stocks.find(stock => stock.product_name === newValue);\n      if (this.currentStock) {\n        this.formData.unit_price = this.currentStock.unit_price;\n        this.currentStock;\n      }\n    }\n  },\n  methods: {\n    getStock() {\n      axios.get('http://localhost:5280/api/stock/stock-get').then(response => {\n        if (response && response.data) {\n          this.stocks = response.data;\n          this.supplier = response.data.map(item => ({\n            id: item.supplier_id,\n            name: item.supplier_name\n          }));\n        }\n      });\n    },\n    getCustomer() {\n      axios.get('http://localhost:5280/api/customer/customer-get').then(response => {\n        if (response != null && response.data != null) this.customer = response.data.map(item => ({\n          id: item.customer_id,\n          name: item.name\n        }));\n      }).catch(error => {\n        swal({\n          title: \"customer not listed\",\n          text: \"error when listing customer\",\n          icon: \"warning\",\n          dangerMode: true\n        });\n        console.error(\"customers not get\", error);\n      });\n    },\n    createSaleInvoice() {\n      this.formData.total_amount = this.formData.quantity * this.formData.unit_price;\n      console.log(\"Form Data:\", this.formData);\n      const stockToUpdate = this.stocks.find(stock => stock.product_name === this.formData.product_name);\n      if (stockToUpdate && this.formData.quantity > stockToUpdate.quantity) {\n        swal({\n          title: \"Stock Limit Exceeded\",\n          text: `You cannot sell more than ${stockToUpdate.quantity} items.`,\n          icon: \"warning\",\n          dangerMode: true\n        });\n        return;\n      }\n      const params = {\n        supplier_id: this.formData.supplier_id,\n        customer_id: this.formData.customer_id,\n        product_name: this.formData.product_name,\n        quantity: parseInt(this.formData.quantity, 10),\n        unit_price: parseFloat(this.formData.unit_price),\n        total_amount: parseFloat(this.formData.total_amount),\n        type: 'sale'\n      };\n      console.log(\"Params being sent:\", params);\n      axios.post('http://localhost:5280/api/invoice/invoice-create-sale', params, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        swal({\n          title: \"Invoce created\",\n          icon: \"success\"\n        });\n        console.log(\"Invoce created\", response.data);\n        const stockToUpdate = this.stocks.find(stock => stock.product_name == params.product_name);\n        console.log(stockToUpdate);\n        const updatedQuantity = stockToUpdate.quantity - params.quantity;\n        if (stockToUpdate) {\n          this.updateStock(stockToUpdate.stock_id, updatedQuantity, params.unit_price);\n        } else {\n          console.error(\"Stock not found for product:\", params.product_name);\n        }\n      }).catch(error => {\n        console.log(\"Error creating invoce\", error.response ? error.response.data : error);\n      });\n    },\n    updateStock(id, quantitySold, unitPrice) {\n      const params = {\n        stock_id: id,\n        quantity: quantitySold,\n        unit_price: unitPrice\n      };\n      console.log(\"params deÄŸerleri:\" + params);\n      axios.post('http://localhost:5280/api/stock/stock-update', params, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log(\"Stock updated\", response.data);\n      }).catch(error => {\n        console.log(\"Error updating stock\", error.response ? error.response.data : error);\n        swal({\n          title: \"Stock update failed\",\n          text: \"Could not update stock\",\n          icon: \"error\"\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","vSelect","swal","name","components","data","formData","customer_id","supplier_id","product_name","quantity","unit_price","total_amount","invoice_type","supplier","stocks","customer","currentStock","created","getCustomer","getStock","watch","formData.product_name","newValue","find","stock","methods","get","then","response","map","item","id","supplier_name","catch","error","title","text","icon","dangerMode","console","createSaleInvoice","log","stockToUpdate","params","parseInt","parseFloat","type","post","headers","updatedQuantity","updateStock","stock_id","quantitySold","unitPrice"],"sources":["C:\\Users\\Polisoft WEB\\Documents\\MuhasebeProgrami\\clientapp\\src\\components\\Invoices\\InvoiceSaleComponent.vue"],"sourcesContent":["<template>\n  <h1>Create Sale Invoice</h1>\n  <form @submit.prevent=\"createSaleInvoice\" class=\"mx-auto my-3 p-5 bg-dark\" style=\"width: 50rem; border: 1px solid grey;\">\n    <div class=\"row mb-3\">\n      <div class=\"col-md-6\">\n        <label for=\"supplier\" class=\"form-label\">Select Supplier:</label>\n        <v-select :options=\"supplier\" label=\"name\" v-model=\"formData.supplier_id\" :reduce=\"supplier => supplier.id\" placeholder=\"Select Supplier\" style=\"color: black;\"></v-select>\n      </div>\n\n      <div class=\"col-md-6\">\n        <label for=\"customer\" class=\"form-label\">Select Customer:</label>\n        <v-select :options=\"customer\" label=\"name\" v-model=\"formData.customer_id\" :reduce=\"customer => customer.id\" placeholder=\"Select Customer\" style=\"color: black;\"></v-select>\n      </div>\n    </div>\n    \n    <div class=\"row mb-3\">\n      <label for=\"product_name\" class=\"form-label\">Select Product:</label>\n      <v-select :options=\"stocks\" label=\"product_name\" v-model=\"formData.product_name\" :reduce=\"stock => stock.product_name\" placeholder=\"Select Product\" style=\"color: black;\"></v-select>\n    </div>\n\n    <div class=\"row mb-3\">\n      <div class=\"col-md-12\">\n        <label for=\"validationDefault02\" class=\"form-label\">Quantity</label>\n        <input type=\"number\" class=\"form-control\" v-model=\"formData.quantity\" required />\n        <small style=\"color: grey;\">Available stock: {{ formData.quantity }}</small>\n      </div>\n      \n      <div class=\"col-md-12 mt-2\">\n        <label for=\"validationDefault03\" class=\"form-label\">Unit Price</label>\n        <input type=\"number\" class=\"form-control\" v-model=\"formData.unit_price\" required step=\"0.01\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-check\">\n          <input class=\"form-check-input\" type=\"checkbox\" required />\n          <label class=\"form-check-label\" for=\"invalidCheck2\"> Agree to terms and conditions </label>\n        </div>\n      </div>\n      <div class=\"col-12 mt-2\">\n        <button class=\"btn btn-primary\" type=\"submit\">Create</button>\n      </div>\n    </div>\n  </form>\n</template>\n\n  \n<script>\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nimport 'vue-select/dist/vue-select.css';\nimport swal from 'sweetalert';\nexport default {\n  name: \"InvoiceSaleComponent\",\n  components:{\n    vSelect,\n  },\n    data(){\n        return {\n            formData:{\n                customer_id:null,\n                supplier_id:null,\n                product_name:'',\n                quantity:0,\n                unit_price:0.00,\n                total_amount:0.00,\n                invoice_type:'sale'\n            },\n            supplier:[],\n            data:[],\n            stocks: [],\n            customer:[],\n            currentStock\n        }\n    },\n    created(){\n        this.getCustomer();\n        this.getStock();\n    },\n    watch: {\n    'formData.product_name'(newValue) {\n      this.currentStock = this.stocks.find(stock => stock.product_name === newValue);\n      if (this.currentStock) {\n        this.formData.unit_price = this.currentStock.unit_price;\n        this.currentStock\n      }\n    }\n  },\n    methods:{\n        getStock(){\n            axios.get('http://localhost:5280/api/stock/stock-get')\n            .then(response => {\n              if (response && response.data) {\n                this.stocks = response.data;\n                this.supplier = response.data.map(item => ({ id: item.supplier_id, name: item.supplier_name }))\n              }\n            });\n        },\n        getCustomer(){\n            axios.get('http://localhost:5280/api/customer/customer-get')\n            .then(response => {\n              if(response != null && response.data != null)\n                this.customer = response.data.map(item => ({ id:item.customer_id,name: item.name }))\n            })\n            .catch(error => {\n              swal({title:\"customer not listed\",text: \"error when listing customer\",icon:\"warning\",dangerMode:true})\n              console.error(\"customers not get\", error);\n            });\n        },\n        createSaleInvoice() {\n          this.formData.total_amount = this.formData.quantity * this.formData.unit_price;\n          console.log(\"Form Data:\", this.formData);\n          const stockToUpdate = this.stocks.find(stock => stock.product_name === this.formData.product_name);\n          if (stockToUpdate && this.formData.quantity > stockToUpdate.quantity) {\n              swal({title: \"Stock Limit Exceeded\",text: `You cannot sell more than ${stockToUpdate.quantity} items.`,icon: \"warning\",dangerMode: true });\n              return; \n          }\n            const params = {\n              supplier_id: this.formData.supplier_id,\n              customer_id: this.formData.customer_id,\n              product_name: this.formData.product_name,\n              quantity: parseInt(this.formData.quantity, 10),\n              unit_price: parseFloat(this.formData.unit_price),\n              total_amount:parseFloat(this.formData.total_amount),\n              type:'sale'\n            };\n            console.log(\"Params being sent:\", params);\n            axios.post('http://localhost:5280/api/invoice/invoice-create-sale', params, {headers: { 'Content-Type': 'application/json' }})\n            .then(response => {\n              swal({title:\"Invoce created\",icon:\"success\"})\n              console.log(\"Invoce created\", response.data);\n              const stockToUpdate = this.stocks.find(stock => stock.product_name == params.product_name);\n              console.log(stockToUpdate);\n              const updatedQuantity = stockToUpdate.quantity - params.quantity;\n                if (stockToUpdate) {\n                    this.updateStock(stockToUpdate.stock_id, updatedQuantity ,params.unit_price);\n                } else {\n                    console.error(\"Stock not found for product:\", params.product_name);\n                }\n            })\n            .catch(error => {\n                console.log(\"Error creating invoce\", error.response ? error.response.data : error); \n            });\n\n        },\n        updateStock(id, quantitySold, unitPrice) {\n          const params = {\n              stock_id: id,\n              quantity: quantitySold,\n              unit_price: unitPrice\n          }\n          console.log(\"params deÄŸerleri:\"+params);\n          axios.post('http://localhost:5280/api/stock/stock-update',params, {headers: { 'Content-Type': 'application/json' }})\n          .then(response => {\n              console.log(\"Stock updated\", response.data);\n          })\n          .catch(error => {\n              console.log(\"Error updating stock\", error.response ? error.response.data : error);\n              swal({ title: \"Stock update failed\", text: \"Could not update stock\", icon: \"error\" });\n          });\n        }\n    }\n}\n</script>\n  \n<style>\n</style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}