{"ast":null,"code":"import axios from 'axios';\nimport swal from 'sweetalert';\nexport default {\n  name: \"StockListComponent\",\n  data() {\n    return {\n      stocks: [],\n      sortKey: 'product_name',\n      // Varsayılan sıralama anahtarı\n      sortOrder: 'asc' // Varsayılan sıralama yönü (artan)\n    };\n  },\n  computed: {\n    sortedStocks() {\n      return [...this.stocks].sort((a, b) => {\n        if (this.sortKey) {\n          let result = 0;\n          if (a[this.sortKey] < b[this.sortKey]) result = -1;\n          if (a[this.sortKey] > b[this.sortKey]) result = 1;\n          return this.sortOrder === 'asc' ? result : -result;\n        }\n        return 0;\n      });\n    }\n  },\n  mounted() {\n    this.getStock();\n  },\n  methods: {\n    getStock() {\n      axios.get('http://localhost:5280/api/stock/stock-get').then(response => {\n        if (response != null && response.data != null) this.stocks = response.data;\n      }).catch(error => {\n        swal({\n          title: \"Stocks not listed\",\n          text: \"Error when listing stock\",\n          icon: \"warning\",\n          dangerMode: true\n        });\n        console.error(\"stocks not get\", error);\n      });\n    },\n    sortBy(key) {\n      if (this.sortKey === key) {\n        this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n      } else {\n        this.sortKey = key;\n        this.sortOrder = 'asc';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","swal","name","data","stocks","sortKey","sortOrder","computed","sortedStocks","sort","a","b","result","mounted","getStock","methods","get","then","response","catch","error","title","text","icon","dangerMode","console","sortBy","key"],"sources":["/Users/mertkezer/Documents/MuhasebeProgrami/clientapp/src/components/Stocks/StockListComponent.vue"],"sourcesContent":["<template>\n  <table class=\"table table-dark\">\n     <thead>\n       <tr>\n         <th class=\"p-3\" @click=\"sortBy('product_name')\">\n           Product Name\n           <span v-if=\"sortKey === 'product_name'\">{{ sortOrder === 'asc' ? '▲' : '▼' }}</span>\n         </th>\n         <th @click=\"sortBy('supplier_name')\">\n           Supplier\n           <span v-if=\"sortKey === 'supplier_name'\">{{ sortOrder === 'asc' ? '▲' : '▼' }}</span>\n         </th>\n         <th>Supplier Id</th>\n         <th @click=\"sortBy('quantity')\">\n           Quantity\n           <span v-if=\"sortKey === 'quantity'\">{{ sortOrder === 'asc' ? '▲' : '▼' }}</span>\n         </th>\n         <th @click=\"sortBy('unit_price')\">\n           Unit Price\n           <span v-if=\"sortKey === 'unit_price'\">{{ sortOrder === 'asc' ? '▲' : '▼' }}</span>\n         </th>\n       </tr>\n     </thead>\n     <tbody>\n       <tr v-for=\"(stock, index) in sortedStocks\" :key=\"index\">\n         <td class=\"p-3\">{{ stock.product_name }}</td>\n         <td>{{ stock.supplier_name }}</td>\n         <td>{{ stock.supplier_id }}</td>\n         <td>{{ stock.quantity }}</td>\n         <td>{{ stock.unit_price }}</td>\n       </tr>\n     </tbody>\n   </table>\n</template>\n\n<script>\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nexport default {\n  name: \"StockListComponent\",\n  data() {\n      return {\n          stocks: [],\n          sortKey: 'product_name',  // Varsayılan sıralama anahtarı\n          sortOrder: 'asc' // Varsayılan sıralama yönü (artan)\n      };\n  },\n  computed: {\n      sortedStocks() {\n          return [...this.stocks].sort((a, b) => {\n              if (this.sortKey) {\n                  let result = 0;\n                  if (a[this.sortKey] < b[this.sortKey]) result = -1;\n                  if (a[this.sortKey] > b[this.sortKey]) result = 1;\n                  return this.sortOrder === 'asc' ? result : -result;\n              }\n              return 0;\n          });\n      }\n  },\n  mounted() {\n      this.getStock();\n  },\n  methods: {\n      getStock() {\n          axios.get('http://localhost:5280/api/stock/stock-get')\n              .then(response => {\n                  if (response != null && response.data != null)\n                      this.stocks = response.data;\n              })\n              .catch(error => {\n                  swal({ title: \"Stocks not listed\", text: \"Error when listing stock\", icon: \"warning\", dangerMode: true });\n                  console.error(\"stocks not get\", error);\n              });\n      },\n      sortBy(key) {\n          if (this.sortKey === key) {\n              this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n          } else {\n              this.sortKey = key;\n              this.sortOrder = 'asc';\n          }\n      }\n  }\n};\n</script>\n\n<style>\nth {\n  cursor: pointer;\n}\n</style>\n"],"mappings":"AAoCA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,IAAG,MAAO,YAAY;AAE7B,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,cAAc;MAAG;MAC1BC,SAAS,EAAE,KAAI,CAAE;IACrB,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACNC,YAAYA,CAAA,EAAG;MACX,OAAO,CAAC,GAAG,IAAI,CAACJ,MAAM,CAAC,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACnC,IAAI,IAAI,CAACN,OAAO,EAAE;UACd,IAAIO,MAAK,GAAI,CAAC;UACd,IAAIF,CAAC,CAAC,IAAI,CAACL,OAAO,IAAIM,CAAC,CAAC,IAAI,CAACN,OAAO,CAAC,EAAEO,MAAK,GAAI,CAAC,CAAC;UAClD,IAAIF,CAAC,CAAC,IAAI,CAACL,OAAO,IAAIM,CAAC,CAAC,IAAI,CAACN,OAAO,CAAC,EAAEO,MAAK,GAAI,CAAC;UACjD,OAAO,IAAI,CAACN,SAAQ,KAAM,KAAI,GAAIM,MAAK,GAAI,CAACA,MAAM;QACtD;QACA,OAAO,CAAC;MACZ,CAAC,CAAC;IACN;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,QAAQ,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACLD,QAAQA,CAAA,EAAG;MACPd,KAAK,CAACgB,GAAG,CAAC,2CAA2C,EAChDC,IAAI,CAACC,QAAO,IAAK;QACd,IAAIA,QAAO,IAAK,IAAG,IAAKA,QAAQ,CAACf,IAAG,IAAK,IAAI,EACzC,IAAI,CAACC,MAAK,GAAIc,QAAQ,CAACf,IAAI;MACnC,CAAC,EACAgB,KAAK,CAACC,KAAI,IAAK;QACZnB,IAAI,CAAC;UAAEoB,KAAK,EAAE,mBAAmB;UAAEC,IAAI,EAAE,0BAA0B;UAAEC,IAAI,EAAE,SAAS;UAAEC,UAAU,EAAE;QAAK,CAAC,CAAC;QACzGC,OAAO,CAACL,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MAC1C,CAAC,CAAC;IACV,CAAC;IACDM,MAAMA,CAACC,GAAG,EAAE;MACR,IAAI,IAAI,CAACtB,OAAM,KAAMsB,GAAG,EAAE;QACtB,IAAI,CAACrB,SAAQ,GAAI,IAAI,CAACA,SAAQ,KAAM,KAAI,GAAI,MAAK,GAAI,KAAK;MAC9D,OAAO;QACH,IAAI,CAACD,OAAM,GAAIsB,GAAG;QAClB,IAAI,CAACrB,SAAQ,GAAI,KAAK;MAC1B;IACJ;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}