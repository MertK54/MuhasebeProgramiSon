{"ast":null,"code":"import axios from 'axios';\nimport swal from 'sweetalert';\nexport default {\n  name: \"InvoiceSaleReturnComponent\",\n  data() {\n    return {\n      invoices: [],\n      formData: {\n        product_name: '',\n        customer_id: 0,\n        supplier_id: 0,\n        stock_id: 0,\n        quantity: 0,\n        unit_price: 0.00,\n        total_amount: 0.00,\n        invoice_statu: null,\n        payment_method: null\n      }\n    };\n  },\n  mounted() {\n    this.getInvoice();\n  },\n  methods: {\n    getInvoice() {\n      const params = {\n        type: 'sale'\n      };\n      axios.post('http://localhost:5280/api/invoice/invoice-get-sale', params, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response != null && response.data != null) this.invoices = response.data;\n        console.log(this.invoices);\n      }).catch(error => {\n        swal({\n          title: \"Sale return invoice not listed\",\n          text: \"Error when listing stock\",\n          icon: \"warning\",\n          dangerMode: true\n        });\n        console.error(\"stocks not get\", error);\n      });\n    },\n    returnSaleInvoice(invoice) {\n      this.formDataAddValue(invoice);\n      console.log(\"Form Data:\", this.formData);\n      const params = {\n        supplier_id: this.formData.supplier_id,\n        customer_id: this.formData.customer_id,\n        stock_id: this.formData.stock_id,\n        product_name: this.formData.product_name,\n        quantity: parseInt(this.formData.quantity, 10),\n        unit_price: parseFloat(this.formData.unit_price),\n        total_amount: parseFloat(this.formData.total_amount),\n        invoice_type: 'sale_return',\n        invoice_statu: this.formData.invoice_statu,\n        payment_method: this.formData.payment_method\n      };\n      console.log(\"Params being sent:\", params);\n      axios.post('http://localhost:5280/api/invoice/invoice-create-sale', params, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        swal({\n          title: \"Invoce created\",\n          icon: \"success\"\n        });\n        console.log(\"Invoce created\", response.data);\n        this.updateStock(this.formData.stock_id, params.quantity, params.unit_price);\n      }).catch(error => {\n        console.log(\"Error creating invoce\", error.response ? error.response.data : error);\n      });\n    },\n    formDataAddValue(invoice) {\n      this.formData.product_name = invoice.product_name, this.formData.supplier_name = invoice.supplier_name, this.formData.supplier_id = invoice.supplier_id, this.formData.quantity = invoice.quantity, this.formData.unit_price = invoice.unit_price, this.formData.total_amount = invoice.quantity * invoice.unit_price;\n      this.formData.stock_id = invoice.stock_id;\n      this.formData.customer_id = invoice.customer_id;\n      this.formData.invoice_statu = invoice.invoice_statu;\n      this.formData.payment_method = invoice.payment_method;\n    },\n    updateStock(id, quantitySold, unitPrice) {\n      const params = {\n        stock_id: id,\n        quantity: quantitySold,\n        unit_price: unitPrice\n      };\n      console.log(\"params value:\" + params);\n      axios.post('http://localhost:5280/api/stock/stock-update-add', params, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        this.getInvoice();\n        console.log(\"Stock updated\", response.data);\n      }).catch(error => {\n        console.log(\"Error updating stock\", error.response ? error.response.data : error);\n        swal({\n          title: \"Stock update failed\",\n          text: \"Could not update stock\",\n          icon: \"error\"\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","swal","name","data","invoices","formData","product_name","customer_id","supplier_id","stock_id","quantity","unit_price","total_amount","invoice_statu","payment_method","mounted","getInvoice","methods","params","type","post","headers","then","response","console","log","catch","error","title","text","icon","dangerMode","returnSaleInvoice","invoice","formDataAddValue","parseInt","parseFloat","invoice_type","updateStock","supplier_name","id","quantitySold","unitPrice"],"sources":["C:\\Users\\Polisoft WEB\\Documents\\MuhasebeProgrami\\clientapp\\src\\components\\Invoices\\InvoiceSaleReturnComponent.vue"],"sourcesContent":["<template>\n    <table class=\"table table-dark\">\n        <thead>\n            <tr>\n                <th class=\"p-3\">Invoice Id</th>\n                <th>Product Name</th>\n                <th>Supplier</th>\n                <th>Customer</th>\n                <th>Payment</th>\n                <th>Statu</th>\n                <th>Quantity</th>\n                <th>Unit Price</th>\n                <th>Total Amount</th>\n                <th>Return</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"(invoice, index) in invoices\" :key=\"index\">\n                <td class=\"p-3\">{{ invoice.invoice_id }}</td>\n                <td>{{ invoice.product_name }}</td>\n                <td>{{ invoice.supplier_name }}</td>\n                <td>{{ invoice.customer_name }}</td>\n                <td>{{ invoice.payment_method }}</td>\n                <td>{{ invoice.invoice_statu }}</td>\n                <td>{{ invoice.quantity }}</td>\n                <td>{{ invoice.unit_price }}</td>\n                <td>{{ invoice.total_amount }}</td>\n                <td><button class=\"btn btn-primary\" @click=\"returnSaleInvoice(invoice)\">Return</button></td>\n            </tr>\n        </tbody>\n    </table>\n</template>    \n<script>\n    import axios from 'axios';\n    import swal from 'sweetalert';\n\n    export default {\n    name: \"InvoiceSaleReturnComponent\",\n    data() {\n        return {\n            invoices: [],\n            formData:{\n                product_name:'',\n                customer_id:0,\n                supplier_id:0,\n                stock_id:0,\n                quantity:0,\n                unit_price:0.00,\n                total_amount:0.00,\n                invoice_statu:null,\n                payment_method:null\n            },\n        }\n    },\n    mounted() {\n        this.getInvoice();\n    },\n    methods: {\n        getInvoice() {\n            const params = {\n                type: 'sale'\n            };\n            axios.post('http://localhost:5280/api/invoice/invoice-get-sale', params, { headers: { 'Content-Type': 'application/json' } })\n                .then(response => {\n                    if (response != null && response.data != null)\n                        this.invoices = response.data; \n                        console.log(this.invoices);\n                })\n                .catch(error => {\n                    swal({ title: \"Sale return invoice not listed\", text: \"Error when listing stock\", icon: \"warning\", dangerMode: true });\n                    console.error(\"stocks not get\", error);\n                });\n        },\n        returnSaleInvoice(invoice){\n            this.formDataAddValue(invoice);\n            console.log(\"Form Data:\", this.formData);\n            const params = {\n                supplier_id: this.formData.supplier_id,\n                customer_id: this.formData.customer_id,\n                stock_id:this.formData.stock_id,\n                product_name: this.formData.product_name,\n                quantity: parseInt(this.formData.quantity, 10),\n                unit_price: parseFloat(this.formData.unit_price),\n                total_amount:parseFloat(this.formData.total_amount),\n                invoice_type:'sale_return',\n                invoice_statu:this.formData.invoice_statu,\n                payment_method:this.formData.payment_method\n            };\n            console.log(\"Params being sent:\", params);\n            axios.post('http://localhost:5280/api/invoice/invoice-create-sale', params, {headers: { 'Content-Type': 'application/json' }})\n            .then(response => {\n                swal({title:\"Invoce created\",icon:\"success\"})\n                console.log(\"Invoce created\", response.data);\n                this.updateStock(this.formData.stock_id, params.quantity ,params.unit_price);\n            })\n            .catch(error => {\n                console.log(\"Error creating invoce\", error.response ? error.response.data : error); \n                });\n        },\n        formDataAddValue(invoice){\n            this.formData.product_name = invoice.product_name,\n            this.formData.supplier_name = invoice.supplier_name,\n            this.formData.supplier_id = invoice.supplier_id,\n            this.formData.quantity = invoice.quantity,\n            this.formData.unit_price = invoice.unit_price,\n            this.formData.total_amount = invoice.quantity * invoice.unit_price;\n            this.formData.stock_id = invoice.stock_id;\n            this.formData.customer_id = invoice.customer_id;\n            this.formData.invoice_statu = invoice.invoice_statu;\n            this.formData.payment_method = invoice.payment_method;\n        },\n        updateStock(id, quantitySold, unitPrice) {\n            const params = {\n                stock_id: id,\n                quantity: quantitySold,\n                unit_price: unitPrice,\n            }\n            console.log(\"params value:\"+params);\n            axios.post('http://localhost:5280/api/stock/stock-update-add',params, {headers: { 'Content-Type': 'application/json' }})\n            .then(response => {\n                this.getInvoice();\n                console.log(\"Stock updated\", response.data);\n            })\n            .catch(error => {\n                console.log(\"Error updating stock\", error.response ? error.response.data : error);\n                swal({ title: \"Stock update failed\", text: \"Could not update stock\", icon: \"error\" });\n            });\n        }\n    }\n}\n</script>\n<style>\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}