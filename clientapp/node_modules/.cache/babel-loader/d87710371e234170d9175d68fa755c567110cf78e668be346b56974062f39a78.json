{"ast":null,"code":"import axios from 'axios';\nimport { Modal } from 'bootstrap';\nimport swal from 'sweetalert';\nexport default {\n  name: \"StockUpdateComponent\",\n  data() {\n    return {\n      stocks: [],\n      selectedStock: {}\n    };\n  },\n  mounted() {\n    this.getStock();\n  },\n  methods: {\n    getStock() {\n      axios.get('http://localhost:5280/api/stock/stock-get').then(response => {\n        console.log(response.data);\n        this.stocks = response.data;\n      }).catch(error => {\n        console.log(\"Stock Not Get\", error);\n      });\n    },\n    openUpdateModal(stock) {\n      this.selectedStock = {\n        ...stock\n      };\n      const modal = new Modal(document.getElementById('updateModal'));\n      modal.show();\n    },\n    updateStock() {\n      axios.post(\"http://localhost:5280/api/stock/stock-update\", this.selectedStock).then(response => {\n        if (response.data.token.length === 36) {\n          swal({\n            title: \"Stok succesfully updated\",\n            icon: \"success\"\n          });\n          this.getStock();\n          const modal = Modal.getInstance(document.getElementById('updateModal'));\n          modal.hide();\n        }\n      }).catch(error => {\n        console.log(\"Update fail\", error);\n        swal({\n          title: \"Stock not updated\",\n          text: \"Error when updated stock\",\n          icon: \"warning\",\n          dangerMode: true\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Modal","swal","name","data","stocks","selectedStock","mounted","getStock","methods","get","then","response","console","log","catch","error","openUpdateModal","stock","modal","document","getElementById","show","updateStock","post","token","length","title","icon","getInstance","hide","text","dangerMode"],"sources":["C:\\Users\\Polisoft WEB\\Documents\\MuhasebeProgrami\\clientapp\\src\\components\\Stocks\\StockUpdateComponent.vue"],"sourcesContent":["<template>\n    <table class=\"table table-dark\">\n        <thead>\n            <tr>\n                <th class=\"p-3\">Stock Id</th>\n                <th>Product Name</th>\n                <th>Supplier</th>\n                <th>Quantity</th>\n                <th>Unit Price</th>\n                <th>Update</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"(stock, index) in stocks\" :key=\"index\">\n                <td class=\"p-3\">{{ stock.product_name }}</td>\n                <td>{{ stock.supplier_name}}</td>\n                <td>{{ stock.supplier_id}}</td>\n                <td>{{ stock.quantity }}</td>\n                <td>{{ stock.unit_price }}</td>\n                <td><button class=\"btn btn-primary\" @click=\"openUpdateModal(stock)\">Update</button></td>\n            </tr>\n        </tbody>\n    </table>\n    <div class=\"modal fade\" id=\"updateModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header text-dark\">\n                    <h5 class=\"modal-title\">Update Stock</h5>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div class=\"modal-body\">\n                    <form @submit.prevent=\"updateStock\" style=\"color:black\">\n                        <div class=\"mb-3\">\n                            <label for=\"name\" class=\"form-label\">Product Name</label>\n                            <input type=\"text\" v-model=\"selectedStock.product_name\" class=\"form-control\" id=\"product_name\" disabled>\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"address\" class=\"form-label\">Quantity</label>\n                            <input type=\"text\" v-model=\"selectedStock.quantity\" class=\"form-control\" id=\"quantity\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"address\" class=\"form-label\">Unit Price</label>\n                            <input type=\"text\" v-model=\"selectedStock.unit_price\" class=\"form-control\" id=\"unit_price\">\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { Modal } from 'bootstrap';\nimport swal from 'sweetalert';\nexport default {\n    name: \"StockUpdateComponent\",\n    data() {\n        return {\n            stocks: [],\n            selectedStock: {}\n        }\n    },\n    mounted() {\n        this.getStock();\n    },\n    methods: {\n        getStock() {\n            axios.get('http://localhost:5280/api/stock/stock-get')\n                .then(response => {\n                    console.log(response.data);\n                    this.stocks = response.data;\n                })\n                .catch(error => {\n                    console.log(\"Stock Not Get\", error);\n                });\n        },\n        openUpdateModal(stock) {\n            this.selectedStock = { ...stock };\n            const modal = new Modal(document.getElementById('updateModal'));\n            modal.show();\n        },\n        updateStock() {\n            axios.post(\"http://localhost:5280/api/stock/stock-update\", this.selectedStock)\n                .then(response => {\n                    if(response.data.token.length === 36){\n                        swal({title: \"Stok succesfully updated\",icon: \"success\"});\n                        this.getStock();\n                        const modal = Modal.getInstance(document.getElementById('updateModal'));\n                        modal.hide();\n                    }\n                })\n                .catch(error => {\n                    console.log(\"Update fail\", error);\n                    swal({title: \"Stock not updated\",text: \"Error when updated stock\",icon: \"warning\",dangerMode: true});\n                });\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":"AAqDA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,KAAI,QAAS,WAAW;AACjC,OAAOC,IAAG,MAAO,YAAY;AAC7B,eAAe;EACXC,IAAI,EAAE,sBAAsB;EAC5BC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE,CAAC;IACpB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,QAAQ,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACLD,QAAQA,CAAA,EAAG;MACPR,KAAK,CAACU,GAAG,CAAC,2CAA2C,EAChDC,IAAI,CAACC,QAAO,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACR,IAAI,CAAC;QAC1B,IAAI,CAACC,MAAK,GAAIO,QAAQ,CAACR,IAAI;MAC/B,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;QACZH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEE,KAAK,CAAC;MACvC,CAAC,CAAC;IACV,CAAC;IACDC,eAAeA,CAACC,KAAK,EAAE;MACnB,IAAI,CAACZ,aAAY,GAAI;QAAE,GAAGY;MAAM,CAAC;MACjC,MAAMC,KAAI,GAAI,IAAIlB,KAAK,CAACmB,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAAC;MAC/DF,KAAK,CAACG,IAAI,CAAC,CAAC;IAChB,CAAC;IACDC,WAAWA,CAAA,EAAG;MACVvB,KAAK,CAACwB,IAAI,CAAC,8CAA8C,EAAE,IAAI,CAAClB,aAAa,EACxEK,IAAI,CAACC,QAAO,IAAK;QACd,IAAGA,QAAQ,CAACR,IAAI,CAACqB,KAAK,CAACC,MAAK,KAAM,EAAE,EAAC;UACjCxB,IAAI,CAAC;YAACyB,KAAK,EAAE,0BAA0B;YAACC,IAAI,EAAE;UAAS,CAAC,CAAC;UACzD,IAAI,CAACpB,QAAQ,CAAC,CAAC;UACf,MAAMW,KAAI,GAAIlB,KAAK,CAAC4B,WAAW,CAACT,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAAC;UACvEF,KAAK,CAACW,IAAI,CAAC,CAAC;QAChB;MACJ,CAAC,EACAf,KAAK,CAACC,KAAI,IAAK;QACZH,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEE,KAAK,CAAC;QACjCd,IAAI,CAAC;UAACyB,KAAK,EAAE,mBAAmB;UAACI,IAAI,EAAE,0BAA0B;UAACH,IAAI,EAAE,SAAS;UAACI,UAAU,EAAE;QAAI,CAAC,CAAC;MACxG,CAAC,CAAC;IACV;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}