{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table table-dark\"\n};\nconst _hoisted_2 = {\n  class: \"p-3\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"p-3\"\n  }, \"Product Name\"), _createElementVNode(\"th\", null, \"Supplier\"), _createElementVNode(\"th\", null, \"Supplier Id\"), _createElementVNode(\"th\", null, \"Quantity\"), _createElementVNode(\"th\", null, \"Unit Price\"), _createElementVNode(\"th\", null, \"Total Amount\"), _createElementVNode(\"th\", null, \"Return\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.invoices, (invoice, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", _hoisted_2, _toDisplayString(invoice.product_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(invoice.supplier_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(invoice.supplier_id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(invoice.quantity), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(invoice.unit_price), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(invoice.unit_price * invoice.quantity), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: $event => $options.returnSaleInvoice(invoice)\n    }, \"Return\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","invoices","invoice","index","key","_hoisted_2","_toDisplayString","product_name","supplier_name","supplier_id","quantity","unit_price","onClick","$event","$options","returnSaleInvoice","_hoisted_3"],"sources":["C:\\Users\\Polisoft WEB\\Documents\\MuhasebeProgrami\\clientapp\\src\\components\\Invoices\\InvoiceSaleReturnComponent.vue"],"sourcesContent":["    <template>\n    <table class=\"table table-dark\">\n        <thead>\n            <tr>\n                <th class=\"p-3\">Product Name</th>\n                <th>Supplier</th>\n                <th>Supplier Id</th>\n                <th>Quantity</th>\n                <th>Unit Price</th>\n                <th>Total Amount</th>\n                <th>Return</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"(invoice, index) in invoices\" :key=\"index\">\n                <td class=\"p-3\">{{ invoice.product_name }}</td>\n                <td>{{ invoice.supplier_name }}</td>\n                <td>{{ invoice.supplier_id }}</td>\n                <td>{{ invoice.quantity }}</td>\n                <td>{{ invoice.unit_price }}</td>\n                <td>{{ invoice.unit_price * invoice.quantity }}</td>\n                <td><button class=\"btn btn-primary\" @click=\"returnSaleInvoice(invoice)\">Return</button></td>\n            </tr>\n        </tbody>\n    </table>\n    </template>\n\n    <script>\n    import axios from 'axios';\n    import swal from 'sweetalert';\n\n    export default {\n    name: \"InvoiceSaleReturnComponent\",\n    data() {\n        return {\n            invoices: [],\n            formData:{\n                product_name:'',\n                customer_id:0,\n                supplier_id:0,\n                stock_id:0,\n                quantity:0,\n                unit_price:0.00,\n                total_amount:0.00\n            }\n        }\n    },\n    mounted() {\n        this.getInvoice();\n    },\n    methods: {\n        getInvoice() {\n            const params = {\n                type: 'sale'\n            };\n            axios.post('http://localhost:5280/api/invoice/invoice-get-sale', params, { headers: { 'Content-Type': 'application/json' } })\n                .then(response => {\n                    if (response != null && response.data != null)\n                        this.invoices = response.data; \n                })\n                .catch(error => {\n                    swal({ title: \"Sale return invoice not listed\", text: \"Error when listing stock\", icon: \"warning\", dangerMode: true });\n                    console.error(\"stocks not get\", error);\n                });\n        },\n        returnSaleInvoice(invoice){\n            this.formDataAddValue(invoice);\n            console.log(\"Form Data:\", this.formData);\n            const params = {\n                supplier_id: this.formData.supplier_id,\n                customer_id: this.formData.customer_id,\n                stock_id:this.formData.stock_id,\n                product_name: this.formData.product_name,\n                quantity: parseInt(this.formData.quantity, 10),\n                unit_price: parseFloat(this.formData.unit_price),\n                total_amount:parseFloat(this.formData.total_amount),\n                invoice_type:'sale_return'\n            };\n                console.log(\"Params being sent:\", params);\n                axios.post('http://localhost:5280/api/invoice/invoice-create-sale', params, {headers: { 'Content-Type': 'application/json' }})\n                .then(response => {\n                swal({title:\"Invoce created\",icon:\"success\"})\n                console.log(\"Invoce created\", response.data);\n                this.updateStock(this.formData.stock_id, params.quantity ,params.unit_price);\n                })\n                .catch(error => {\n                    console.log(\"Error creating invoce\", error.response ? error.response.data : error); \n                });\n        },\n        formDataAddValue(invoice){\n            this.formData.product_name = invoice.product_name,\n            this.formData.supplier_name = invoice.supplier_name,\n            this.formData.supplier_id = invoice.supplier_id,\n            this.formData.quantity = invoice.quantity,\n            this.formData.unit_price = invoice.unit_price,\n            this.formData.total_amount = invoice.quantity * invoice.unit_price;\n            this.formData.stock_id = invoice.stock_id;\n            this.formData.customer_id = invoice.customer_id;\n        },\n        updateStock(id, quantitySold, unitPrice) {\n            const params = {\n                stock_id: id,\n                quantity: quantitySold,\n                unit_price: unitPrice\n            }\n            console.log(\"params deÄŸerleri:\"+params);\n            axios.post('http://localhost:5280/api/invoice/sale-return',params, {headers: { 'Content-Type': 'application/json' }})\n            .then(response => {\n                console.log(\"Stock updated\", response.data);\n            })\n            .catch(error => {\n                console.log(\"Error updating stock\", error.response ? error.response.data : error);\n                swal({ title: \"Stock update failed\", text: \"Could not update stock\", icon: \"error\" });\n            });\n            }\n    }\n    }\n    </script>\n\n    <style>\n    </style>\n"],"mappings":";;EACWA,KAAK,EAAC;AAAkB;;EAcfA,KAAK,EAAC;AAAK;mBAf/B;;uBACIC,mBAAA,CAuBQ,SAvBRC,UAuBQ,G,0BAtBJC,mBAAA,CAUQ,gBATJA,mBAAA,CAQK,aAPDA,mBAAA,CAAiC;IAA7BH,KAAK,EAAC;EAAK,GAAC,cAAY,GAC5BG,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAoB,YAAhB,aAAW,GACfA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAqB,YAAjB,cAAY,GAChBA,mBAAA,CAAe,YAAX,QAAM,E,wBAGlBA,mBAAA,CAUQ,iB,kBATJF,mBAAA,CAQKG,SAAA,QAtBjBC,WAAA,CAc2CC,KAAA,CAAAC,QAAQ,EAdnD,CAcwBC,OAAO,EAAEC,KAAK;yBAA1BR,mBAAA,CAQK;MARqCS,GAAG,EAAED;IAAK,IAChDN,mBAAA,CAA+C,MAA/CQ,UAA+C,EAAAC,gBAAA,CAA5BJ,OAAO,CAACK,YAAY,kBACvCV,mBAAA,CAAoC,YAAAS,gBAAA,CAA7BJ,OAAO,CAACM,aAAa,kBAC5BX,mBAAA,CAAkC,YAAAS,gBAAA,CAA3BJ,OAAO,CAACO,WAAW,kBAC1BZ,mBAAA,CAA+B,YAAAS,gBAAA,CAAxBJ,OAAO,CAACQ,QAAQ,kBACvBb,mBAAA,CAAiC,YAAAS,gBAAA,CAA1BJ,OAAO,CAACS,UAAU,kBACzBd,mBAAA,CAAoD,YAAAS,gBAAA,CAA7CJ,OAAO,CAACS,UAAU,GAAGT,OAAO,CAACQ,QAAQ,kBAC5Cb,mBAAA,CAA4F,aAAxFA,mBAAA,CAAmF;MAA3EH,KAAK,EAAC,iBAAiB;MAAEkB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,iBAAiB,CAACb,OAAO;OAAG,QAAM,iBArB9Fc,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}