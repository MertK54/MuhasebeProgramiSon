{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row mb-3\"\n};\nconst _hoisted_2 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_4 = {\n  class: \"row mb-3\"\n};\nconst _hoisted_5 = {\n  class: \"row mb-3\"\n};\nconst _hoisted_6 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_7 = {\n  style: {\n    \"color\": \"grey\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"col-md-12 mt-2\"\n};\nexport function render(_ctx, _cache) {\n  const _component_v_select = _resolveComponent(\"v-select\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[12] || (_cache[12] = _createElementVNode(\"h1\", null, \"Create Purchase Invoice\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => _ctx.createPurchaseInvoice && _ctx.createPurchaseInvoice(...args), [\"prevent\"])),\n    class: \"mx-auto my-3 p-5 bg-dark\",\n    style: {\n      \"width\": \"50rem\",\n      \"border\": \"1px solid grey\"\n    }\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"customer\",\n    class: \"form-label\"\n  }, \"Select Customer:\", -1 /* HOISTED */)), _createVNode(_component_v_select, {\n    options: _ctx.customer,\n    label: \"name\",\n    modelValue: _ctx.formData.customer_id,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.formData.customer_id = $event),\n    reduce: customer => customer.id,\n    placeholder: \"Select Customer\",\n    style: {\n      \"color\": \"black\"\n    }\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\", \"reduce\"])]), _createElementVNode(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"supplier\",\n    class: \"form-label\"\n  }, \"Select Supplier:\", -1 /* HOISTED */)), _createVNode(_component_v_select, {\n    options: _ctx.supplier,\n    label: \"name\",\n    modelValue: _ctx.formData.supplier_id,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.formData.supplier_id = $event),\n    reduce: supplier => supplier.id,\n    placeholder: \"Select Supplier\",\n    style: {\n      \"color\": \"black\"\n    }\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\", \"reduce\"])])]), _createElementVNode(\"div\", _hoisted_4, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"product_name\",\n    class: \"form-label\"\n  }, \"Select Product:\", -1 /* HOISTED */)), _createVNode(_component_v_select, {\n    options: _ctx.stocks,\n    label: \"product_name\",\n    modelValue: _ctx.formData.product_name,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.formData.product_name = $event),\n    reduce: stock => stock.product_name,\n    placeholder: \"Select Product\",\n    style: {\n      \"color\": \"black\"\n    }\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\", \"reduce\"])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"validationDefault02\",\n    class: \"form-label\"\n  }, \"Quantity\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.formData.quantity = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.formData.quantity]]), _createElementVNode(\"small\", _hoisted_7, \"Available stock: \" + _toDisplayString(this.currentStock.quantity), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"validationDefault03\",\n    class: \"form-label\"\n  }, \"Unit Price\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.formData.unit_price = $event),\n    required: \"\",\n    step: \"0.01\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.formData.unit_price]])])]), _cache[11] || (_cache[11] = _createStaticVNode(\"<div class=\\\"row\\\"><div class=\\\"col-6\\\"><div class=\\\"form-check\\\"><input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" required><label class=\\\"form-check-label\\\" for=\\\"invalidCheck2\\\"> Agree to terms and conditions </label></div></div><div class=\\\"col-12 mt-2\\\"><button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Create</button></div></div>\", 1))], 32 /* NEED_HYDRATION */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_Fragment","_createElementVNode","onSubmit","_cache","_withModifiers","args","_ctx","createPurchaseInvoice","_hoisted_1","_hoisted_2","for","_createVNode","_component_v_select","options","customer","label","modelValue","formData","customer_id","$event","reduce","id","placeholder","_hoisted_3","supplier","supplier_id","_hoisted_4","stocks","product_name","stock","_hoisted_5","_hoisted_6","type","quantity","required","_hoisted_7","_toDisplayString","currentStock","_hoisted_8","unit_price","step","_createStaticVNode"],"sources":["C:\\Users\\Polisoft WEB\\Documents\\MuhasebeProgrami\\clientapp\\src\\components\\Invoices\\InvoicePurchaseComponent.vue"],"sourcesContent":["<template>\n    <h1>Create Purchase Invoice</h1>\n    <form @submit.prevent=\"createPurchaseInvoice\" class=\"mx-auto my-3 p-5 bg-dark\" style=\"width: 50rem; border: 1px solid grey;\">\n      <div class=\"row mb-3\">\n        <div class=\"col-md-6\">\n          <label for=\"customer\" class=\"form-label\">Select Customer:</label>\n          <v-select :options=\"customer\" label=\"name\" v-model=\"formData.customer_id\" :reduce=\"customer => customer.id\" placeholder=\"Select Customer\" style=\"color: black;\"></v-select>\n        </div>\n        <div class=\"col-md-6\">\n          <label for=\"supplier\" class=\"form-label\">Select Supplier:</label>\n          <v-select :options=\"supplier\" label=\"name\" v-model=\"formData.supplier_id\" :reduce=\"supplier => supplier.id\" placeholder=\"Select Supplier\" style=\"color: black;\"></v-select>\n        </div>\n      </div>\n      \n      <div class=\"row mb-3\">\n        <label for=\"product_name\" class=\"form-label\">Select Product:</label>\n        <v-select :options=\"stocks\" label=\"product_name\" v-model=\"formData.product_name\" :reduce=\"stock => stock.product_name\" placeholder=\"Select Product\" style=\"color: black;\"></v-select>\n      </div>\n  \n      <div class=\"row mb-3\">\n        <div class=\"col-md-12\">\n          <label for=\"validationDefault02\" class=\"form-label\">Quantity</label>\n          <input type=\"number\" class=\"form-control\" v-model=\"formData.quantity\" required />\n          <small style=\"color: grey;\">Available stock: {{ this.currentStock.quantity }}</small>\n        </div>\n        \n        <div class=\"col-md-12 mt-2\">\n          <label for=\"validationDefault03\" class=\"form-label\">Unit Price</label>\n          <input type=\"number\" class=\"form-control\" v-model=\"formData.unit_price\" required step=\"0.01\" />\n        </div>\n      </div>\n  \n      <div class=\"row\">\n        <div class=\"col-6\">\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" required />\n            <label class=\"form-check-label\" for=\"invalidCheck2\"> Agree to terms and conditions </label>\n          </div>\n        </div>\n        <div class=\"col-12 mt-2\">\n          <button class=\"btn btn-primary\" type=\"submit\">Create</button>\n        </div>\n      </div>\n    </form>\n  </template>\n  \n    \n  <script>\n  import axios from 'axios';\n  import vSelect from 'vue-select';\n  import 'vue-select/dist/vue-select.css';\n  import swal from 'sweetalert';\n  export default {\n    name: \"InvoicePurchaseComponent\",\n    components:{\n      vSelect,\n    },\n      data(){\n          return {\n              formData:{\n                  customer_id:null,\n                  supplier_id:null,\n                  stock_id:null,\n                  supplier_name:\n                  product_name:'',\n                  quantity:0,\n                  unit_price:0.00,\n                  invoice_type:'purchase',\n                  total_amount:0.00\n              },\n              supplier:[],\n              data:[],\n              stocks: [],\n              customer:[],\n              currentStock:[]\n          }  \n      },\n      created(){\n          this.getStock();\n          this.getCustomer();\n      },\n      watch: {\n        'formData.product_name'(newValue) {\n          this.currentStock = this.stocks.find(stock => stock.product_name === newValue);\n          if (this.currentStock) {\n            this.formData.unit_price = this.currentStock.unit_price;\n            this.formData.stock_id = this.currentStock.stock_id;\n          }\n        }\n      },\n      methods:{\n          getStock(){\n              axios.get('http://localhost:5280/api/stock/stock-get')\n              .then(response => {\n                if (response && response.data) {\n                  this.stocks = response.data;\n                  this.supplier = response.data.map(item => ({ id: item.supplier_id, name: item.supplier_name }))\n                }\n              });\n          },\n          getCustomer(){\n              axios.get('http://localhost:5280/api/customer/customer-get')\n              .then(response => {\n                if(response != null && response.data != null)\n                  this.customer = response.data.map(item => ({ id:item.customer_id,name: item.name }))\n              })\n              .catch(error => {\n                swal({title:\"customer not listed\",text: \"error when listing customer\",icon:\"warning\",dangerMode:true})\n                console.error(\"customers not get\", error);\n              });\n          },\n          createPurchaseInvoice() {\n            this.formData.total_amount = this.formData.quantity * this.formData.unit_price;\n            console.log(\"Form Data:\", this.formData);\n            if (this.formData.quantity > this.currentStock.quantity) {\n                swal({title: \"Stock Limit Exceeded\", text: `You cannot sell more than ${this.currentStock.quantity} items.`, icon: \"warning\",dangerMode: true});\n                return; \n            }\n              const params = {\n                supplier_id: this.formData.supplier_id,\n                customer_id: this.formData.customer_id,\n                stock_id: this.formData.stock_id,\n                product_name: this.formData.product_name,\n                quantity: parseInt(this.formData.quantity, 10),\n                unit_price: parseFloat(this.formData.unit_price),\n                total_amount:parseFloat(this.formData.total_amount),\n                invoice_type:'purchase'\n              };\n              console.log(\"Params being sent:\", params);\n              axios.post('http://localhost:5280/api/invoice/invoice-create-purchase', params, {headers: { 'Content-Type': 'application/json' }})\n              .then(response => {\n                swal({title:\"Invoce created\",icon:\"success\"})\n                console.log(\"Invoce created\", response.data);\n              })\n              .catch(error => {\n                  console.log(\"Error creating invoce\", error.response ? error.response.data : error); \n              });\n          },\n          updateStock(id, quantitySold, unitPrice) {\n            const params = {\n                stock_id: id,\n                quantity: quantitySold,\n                unit_price: unitPrice\n            }\n            console.log(\"params değerleri:\"+params);\n            axios.post('http://localhost:5280/api/stock/stock-update-reduce',params, {headers: { 'Content-Type': 'application/json' }})\n            .then(response => {\n                console.log(\"Stock updated\", response.data);\n            })\n            .catch(error => {\n                console.log(\"Error updating stock\", error.response ? error.response.data : error);\n                swal({ title: \"Stock update failed\", text: \"Could not update stock\", icon: \"error\" });\n            });\n          }\n      }\n  }\n  </script>\n    \n  <style>\n  </style>\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}