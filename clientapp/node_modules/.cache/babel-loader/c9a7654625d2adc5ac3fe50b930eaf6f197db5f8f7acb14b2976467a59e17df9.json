{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row mb-3\"\n};\nconst _hoisted_2 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_4 = {\n  class: \"row mb-3\"\n};\nconst _hoisted_5 = {\n  class: \"row mb-3\"\n};\nconst _hoisted_6 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  style: {\n    \"color\": \"grey\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"col-md-12 mt-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_select = _resolveComponent(\"v-select\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[12] || (_cache[12] = _createElementVNode(\"h1\", null, \"Create Sale Invoice\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.createSaleInvoice && $options.createSaleInvoice(...args), [\"prevent\"])),\n    class: \"mx-auto my-3 p-5 bg-dark\",\n    style: {\n      \"width\": \"50rem\",\n      \"border\": \"1px solid grey\"\n    }\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"supplier\",\n    class: \"form-label\"\n  }, \"Select Supplier:\", -1 /* HOISTED */)), _createVNode(_component_v_select, {\n    options: $data.supplier,\n    label: \"name\",\n    modelValue: $data.formData.supplier_id,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.supplier_id = $event),\n    reduce: supplier => supplier.id,\n    placeholder: \"Select Supplier\",\n    style: {\n      \"color\": \"black\"\n    }\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\", \"reduce\"])]), _createElementVNode(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"customer\",\n    class: \"form-label\"\n  }, \"Select Customer:\", -1 /* HOISTED */)), _createVNode(_component_v_select, {\n    options: $data.customer,\n    label: \"name\",\n    modelValue: $data.formData.customer_id,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.customer_id = $event),\n    reduce: customer => customer.id,\n    placeholder: \"Select Customer\",\n    style: {\n      \"color\": \"black\"\n    }\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\", \"reduce\"])])]), _createElementVNode(\"div\", _hoisted_4, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"product_name\",\n    class: \"form-label\"\n  }, \"Select Product:\", -1 /* HOISTED */)), _createVNode(_component_v_select, {\n    options: $data.stocks,\n    label: \"product_name\",\n    modelValue: $data.formData.product_name,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.formData.product_name = $event),\n    reduce: stock => stock.product_name,\n    placeholder: \"Select Product\",\n    style: {\n      \"color\": \"black\"\n    }\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\", \"reduce\"])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"validationDefault02\",\n    class: \"form-label\"\n  }, \"Quantity\", -1 /* HOISTED */)), _ctx.currentStock ? (_openBlock(), _createElementBlock(\"small\", _hoisted_7, \"Available stock: \" + _toDisplayString(_ctx.currentStock.quantity), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.formData.quantity = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.quantity]])]), _createElementVNode(\"div\", _hoisted_8, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"validationDefault03\",\n    class: \"form-label\"\n  }, \"Unit Price\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.formData.unit_price = $event),\n    required: \"\",\n    step: \"0.01\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.unit_price]])])]), _cache[11] || (_cache[11] = _createStaticVNode(\"<div class=\\\"row\\\"><div class=\\\"col-6\\\"><div class=\\\"form-check\\\"><input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" required><label class=\\\"form-check-label\\\" for=\\\"invalidCheck2\\\"> Agree to terms and conditions </label></div></div><div class=\\\"col-12 mt-2\\\"><button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Create</button></div></div>\", 1))], 32 /* NEED_HYDRATION */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_Fragment","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","createSaleInvoice","_hoisted_1","_hoisted_2","for","_createVNode","_component_v_select","options","$data","supplier","label","modelValue","formData","supplier_id","$event","reduce","id","placeholder","_hoisted_3","customer","customer_id","_hoisted_4","stocks","product_name","stock","_hoisted_5","_hoisted_6","_ctx","currentStock","_hoisted_7","_toDisplayString","quantity","_createCommentVNode","type","required","_hoisted_8","unit_price","step","_createStaticVNode"],"sources":["C:\\Users\\Polisoft WEB\\Documents\\MuhasebeProgrami\\clientapp\\src\\components\\Invoices\\InvoiceSaleComponent.vue"],"sourcesContent":["<template>\n  <h1>Create Sale Invoice</h1>\n  <form @submit.prevent=\"createSaleInvoice\" class=\"mx-auto my-3 p-5 bg-dark\" style=\"width: 50rem; border: 1px solid grey;\">\n    <div class=\"row mb-3\">\n      <div class=\"col-md-6\">\n        <label for=\"supplier\" class=\"form-label\">Select Supplier:</label>\n        <v-select :options=\"supplier\" label=\"name\" v-model=\"formData.supplier_id\" :reduce=\"supplier => supplier.id\" placeholder=\"Select Supplier\" style=\"color: black;\"></v-select>\n      </div>\n\n      <div class=\"col-md-6\">\n        <label for=\"customer\" class=\"form-label\">Select Customer:</label>\n        <v-select :options=\"customer\" label=\"name\" v-model=\"formData.customer_id\" :reduce=\"customer => customer.id\" placeholder=\"Select Customer\" style=\"color: black;\"></v-select>\n      </div>\n    </div>\n    \n    <div class=\"row mb-3\">\n      <label for=\"product_name\" class=\"form-label\">Select Product:</label>\n      <v-select :options=\"stocks\" label=\"product_name\" v-model=\"formData.product_name\" :reduce=\"stock => stock.product_name\" placeholder=\"Select Product\" style=\"color: black;\"></v-select>\n    </div>\n\n    <div class=\"row mb-3\">\n      <div class=\"col-md-12\">\n        <label for=\"validationDefault02\" class=\"form-label\">Quantity</label>\n        <small v-if=\"currentStock\" style=\"color: grey;\">Available stock: {{ currentStock.quantity }}</small>\n        <input type=\"number\" class=\"form-control\" v-model=\"formData.quantity\" required />\n      </div>\n      \n      <div class=\"col-md-12 mt-2\">\n        <label for=\"validationDefault03\" class=\"form-label\">Unit Price</label>\n        <input type=\"number\" class=\"form-control\" v-model=\"formData.unit_price\" required step=\"0.01\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-check\">\n          <input class=\"form-check-input\" type=\"checkbox\" required />\n          <label class=\"form-check-label\" for=\"invalidCheck2\"> Agree to terms and conditions </label>\n        </div>\n      </div>\n      <div class=\"col-12 mt-2\">\n        <button class=\"btn btn-primary\" type=\"submit\">Create</button>\n      </div>\n    </div>\n  </form>\n</template>\n\n  \n<script>\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nimport 'vue-select/dist/vue-select.css';\nimport swal from 'sweetalert';\nexport default {\n  name: \"InvoiceSaleComponent\",\n  components:{\n    vSelect,\n  },\n    data(){\n        return {\n            formData:{\n                customer_id:null,\n                supplier_id:null,\n                product_name:'',\n                quantity:'',\n                unit_price:'',\n                invoice_type:'sale'\n            },\n            supplier:[],\n            data:[],\n            stocks: [],\n            customer:[]\n        }\n    },\n    created(){\n        this.getCustomer();\n    },\n    mounted(){\n        this.getStock();\n    },\n    methods:{\n        getStock(){\n            axios.get('http://localhost:5280/api/stock/stock-get')\n            .then(response => {\n              if (response && response.data) {\n                this.stocks = response.data;\n                this.supplier = response.data.map(item => ({ id: item.supplier_id, name: item.supplier_name }))\n              }\n            });\n        },\n        getCustomer(){\n            axios.get('http://localhost:5280/api/customer/customer-get')\n            .then(response => {\n              if(response != null && response.data != null)\n                this.customer = response.data.map(item => ({ id:item.customer_id,name: item.name }))\n            })\n            .catch(error => {\n              swal({title:\"customer not listed\",text: \"error when listing customer\",icon:\"warning\",dangerMode:true})\n              console.error(\"customers not get\", error);\n            });\n        },\n        createSaleInvoice() {\n          console.log(\"Form Data:\", this.formData);\n          const stockToUpdate = this.stocks.find(stock => stock.product_name === this.formData.product_name);\n          if (stockToUpdate && this.formData.quantity > stockToUpdate.quantity) {\n              swal({\n                  title: \"Stock Limit Exceeded\",text: `You cannot sell more than ${stockToUpdate.quantity} items.`,icon: \"warning\",dangerMode: true\n              });\n              return; \n          }\n            const params = {\n              supplier_id: this.formData.supplier_id,\n              customer_id: this.formData.customer_id,\n              product_name: this.formData.product_name,\n              quantity: parseInt(this.formData.quantity, 10),\n              unit_price: parseFloat(this.formData.unit_price),\n              type:'sale'\n            };\n            console.log(\"Params being sent:\", params);\n            axios.post('http://localhost:5280/api/invoice/invoice-create-sale', params, {headers: { 'Content-Type': 'application/json' }})\n            .then(response => {\n              swal({title:\"Invoce created\",icon:\"success\"})\n              console.log(\"Invoce created\", response.data);\n              const stockToUpdate = this.stocks.find(stock => stock.product_name == params.product_name);\n              console.log(stockToUpdate);\n                if (stockToUpdate) {\n                    this.updateStock(stockToUpdate.stock_id, params.quantity, params.unit_price);\n                } else {\n                    console.error(\"Stock not found for product:\", params.product_name);\n                }\n            })\n            .catch(error => {\n                console.log(\"Error creating invoce\", error.response ? error.response.data : error); \n            });\n        },\n        updateStock(id, quantitySold, unitPrice) {\n          const params = {\n              stock_id: id,\n              quantity: quantitySold,\n              unit_price: unitPrice\n          }\n          console.log(\"params değerleri:\"+params);\n          axios.post('http://localhost:5280/api/stock/stock-update',params, {headers: { 'Content-Type': 'application/json' }})\n          .then(response => {\n              console.log(\"Stock updated\", response.data);\n          })\n          .catch(error => {\n              console.log(\"Error updating stock\", error.response ? error.response.data : error);\n              swal({ title: \"Stock update failed\", text: \"Could not update stock\", icon: \"error\" });\n          });\n        }\n    }\n}\n</script>\n  \n<style>\n</style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}