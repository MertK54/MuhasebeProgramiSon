{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table table-dark\"\n};\nconst _hoisted_2 = {\n  class: \"p-3\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"p-3\"\n  }, \"Product Name\"), _createElementVNode(\"th\", null, \"Supplier\"), _createElementVNode(\"th\", null, \"Supplier Id\"), _createElementVNode(\"th\", null, \"Quantity\"), _createElementVNode(\"th\", null, \"Unit Price\"), _createElementVNode(\"th\", null, \"Total Amount\"), _createElementVNode(\"th\", null, \"Return\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.invoices, (invoice, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", _hoisted_2, _toDisplayString(invoice.product_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(invoice.supplier_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(invoice.supplier_id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(invoice.quantity), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(invoice.unit_price), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(invoice.unit_price * invoice.quantity), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: $event => $options.returnPurchaseInvoice(invoice)\n    }, \"Return\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","invoices","invoice","index","key","_hoisted_2","_toDisplayString","product_name","supplier_name","supplier_id","quantity","unit_price","onClick","$event","$options","returnPurchaseInvoice","_hoisted_3"],"sources":["C:\\Users\\Polisoft WEB\\Documents\\MuhasebeProgrami\\clientapp\\src\\components\\Invoices\\InvoicePurchaseReturnComponent.vue"],"sourcesContent":["<template>\r\n    <table class=\"table table-dark\">\r\n        <thead>\r\n            <tr>\r\n                <th class=\"p-3\">Product Name</th>\r\n                <th>Supplier</th>\r\n                <th>Supplier Id</th>\r\n                <th>Quantity</th>\r\n                <th>Unit Price</th>\r\n                <th>Total Amount</th>\r\n                <th>Return</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr v-for=\"(invoice, index) in invoices\" :key=\"index\">\r\n                <td class=\"p-3\">{{ invoice.product_name }}</td>\r\n                <td>{{ invoice.supplier_name }}</td>\r\n                <td>{{ invoice.supplier_id }}</td>\r\n                <td>{{ invoice.quantity }}</td>\r\n                <td>{{ invoice.unit_price }}</td>\r\n                <td>{{ invoice.unit_price * invoice.quantity }}</td>\r\n                <td><button class=\"btn btn-primary\" @click=\"returnPurchaseInvoice(invoice)\">Return</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    </template>\r\n<script>\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nexport default {\r\n    data(){\r\n        return{\r\n        invoices: [],\r\n        formData:{\r\n            product_name:'',\r\n            supplier_id:0,\r\n            customer_id:0,\r\n            stock_id:'',\r\n            quantity:0,\r\n            unit_price:0.00,\r\n            total_amount:0.00,\r\n        },\r\n        \r\n    }\r\n    },\r\n    mounted(){\r\n        this.getInvoice();\r\n    },\r\n    methods:{\r\n        getInvoice(){\r\n            const params = {\r\n                type: 'sale'\r\n            };\r\n            axios.post('http://localhost:5280/api/invoice/invoice-get-sale',params,{ headers: { 'Content-Type': 'application/json' } })\r\n            .then(response => {\r\n                if (response != null && response.data != null)\r\n                    this.invoices = response.data; \r\n                })\r\n            .catch(error => {\r\n                swal({ title: \"Sale return invoice not listed\", text: \"Error when listing stock\", icon: \"warning\", dangerMode: true });\r\n                console.error(\"stocks not get\", error);\r\n                });\r\n        },\r\n        returnPurchaseInvoice(invoice){\r\n            this.formDataAddValue(invoice);\r\n            console.log(\"Form Data:\",this.formData);\r\n            const params= {\r\n                supplier_id: this.formData.supplier_id,\r\n                customer_id: this.formData.customer_id,\r\n                stock_id: this.formData.stock_id,\r\n                producut_name: this.formData.producut_name,\r\n                quantity: this.formData.quantity,\r\n                unit_price: this.formData.unit_price,\r\n                total_amount: this.formData.total_amount,\r\n                invoice_type: 'purchase_return'\r\n            };\r\n            console.log(\"Params being sent:\", params);\r\n            axios.post('http://localhost:5280/api/invoice/invoice-create-purchase',params,{headers:{'Content-Type':'applicaiton/json'}})\r\n            .then(response => {\r\n                swal({title:\"Invoice created\",icon:\"success\"})\r\n                console.log(\"Invoice Created\",response.data);\r\n                this.updateStock(this.formData.stock_id, params.quantity,params.unit_price);\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error creating invoice\",error.response ? error.response.data : error)\r\n            })\r\n        },\r\n        formDataAddValue(invoice)\r\n        {\r\n            this.formData.product_name = invoice.product_name,\r\n            this.formData.supplier_name = invoice.supplier_name,\r\n            this.formData.supplier_id = invoice.supplier_id,\r\n            this.formData.quantity = invoice.quantity,\r\n            this.formData.unit_price = invoice.unit_price,\r\n            this.formData.total_amount = invoice.quantity * invoice.unit_price;\r\n            this.formData.stock_id = invoice.stock_id;\r\n            this.formData.customer_id = invoice.customer_id;\r\n        },\r\n        updateStock(id,quantitySold,unitPrice){\r\n            const params = {\r\n                stock_id:id,\r\n                quantity:quantitySold,\r\n                unit_price:unitPrice\r\n            }\r\n            console.log(\"params value:\"+params);\r\n            axios.post('http://localhost:5280/api/invoice/purchase-return',params, {headers: { 'Content-Type': 'application/json' }})\r\n            .then(response => {\r\n                console.log(\"Stock updated\",response.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error updating stock\",error.response ? error.response : error)\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>    \r\n<style>\r\n</style>"],"mappings":";;EACWA,KAAK,EAAC;AAAkB;;EAcfA,KAAK,EAAC;AAAK;mBAf/B;;uBACIC,mBAAA,CAuBQ,SAvBRC,UAuBQ,G,0BAtBJC,mBAAA,CAUQ,gBATJA,mBAAA,CAQK,aAPDA,mBAAA,CAAiC;IAA7BH,KAAK,EAAC;EAAK,GAAC,cAAY,GAC5BG,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAoB,YAAhB,aAAW,GACfA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAqB,YAAjB,cAAY,GAChBA,mBAAA,CAAe,YAAX,QAAM,E,wBAGlBA,mBAAA,CAUQ,iB,kBATJF,mBAAA,CAQKG,SAAA,QAtBjBC,WAAA,CAc2CC,KAAA,CAAAC,QAAQ,EAdnD,CAcwBC,OAAO,EAAEC,KAAK;yBAA1BR,mBAAA,CAQK;MARqCS,GAAG,EAAED;IAAK,IAChDN,mBAAA,CAA+C,MAA/CQ,UAA+C,EAAAC,gBAAA,CAA5BJ,OAAO,CAACK,YAAY,kBACvCV,mBAAA,CAAoC,YAAAS,gBAAA,CAA7BJ,OAAO,CAACM,aAAa,kBAC5BX,mBAAA,CAAkC,YAAAS,gBAAA,CAA3BJ,OAAO,CAACO,WAAW,kBAC1BZ,mBAAA,CAA+B,YAAAS,gBAAA,CAAxBJ,OAAO,CAACQ,QAAQ,kBACvBb,mBAAA,CAAiC,YAAAS,gBAAA,CAA1BJ,OAAO,CAACS,UAAU,kBACzBd,mBAAA,CAAoD,YAAAS,gBAAA,CAA7CJ,OAAO,CAACS,UAAU,GAAGT,OAAO,CAACQ,QAAQ,kBAC5Cb,mBAAA,CAAgG,aAA5FA,mBAAA,CAAuF;MAA/EH,KAAK,EAAC,iBAAiB;MAAEkB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,qBAAqB,CAACb,OAAO;OAAG,QAAM,iBArBlGc,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}