{"ast":null,"code":"import axios from 'axios';\nimport swal from 'sweetalert';\nexport default {\n  name: \"InvoiceDeleteComponent\",\n  data() {\n    return {\n      invoices: []\n    };\n  },\n  mounted() {\n    this.getListInvoice();\n  },\n  methods: {\n    getListInvoice() {\n      axios.get('http://localhost:5280/api/invoice/invoice-list-all').then(response => {\n        this.invoices = response.data;\n      }).catch(error => {\n        console.log(\"invoice listed error\", error);\n        swal({\n          title: \"invoice listed error\"\n        });\n      });\n    },\n    deleteInvoice(invoice) {\n      this.updateStock(invoice.stock_id, invoice.quantity, invoice.unit_price);\n      console.log(invoice.stock_id, invoice.quantity, invoice.unit_price);\n      const params = {\n        invoice_id: invoice.invoice_id\n      };\n      console.log(\"Params being sent:\", params);\n      axios.delete('http://localhost:5280/api/invoice/invoice-delete', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: params\n      }).then(response => {\n        if (response && response.data && response.data.token.length === 36) {\n          console.log(\"Succesfuly Deleted\", response);\n          swal({\n            title: 'Successfuly Deleted'\n          });\n          this.getListInvoice();\n        } else {\n          console.log(\"Error Deleted\", response);\n          swal({\n            title: 'Error Deleted'\n          });\n        }\n      }).catch(error => {\n        console.log(\"Error trying to delete:\", error);\n        swal({\n          title: \"Error when trying to delete \",\n          icon: \"error\"\n        });\n      });\n    },\n    updateStock(id, quantitySold, unitPrice) {\n      const params = {\n        stock_id: id,\n        quantity: quantitySold,\n        unit_price: unitPrice\n      };\n      console.log(\"params değerleri:\" + params);\n      axios.post('http://localhost:5280/api/stock/stock-update-add', params, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log(\"Stock updated\", response.data);\n      }).catch(error => {\n        console.log(\"Error updating stock\", error.response ? error.response.data : error);\n        swal({\n          title: \"Stock update failed\",\n          text: \"Could not update stock\",\n          icon: \"error\"\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","swal","name","data","invoices","mounted","getListInvoice","methods","get","then","response","catch","error","console","log","title","deleteInvoice","invoice","updateStock","stock_id","quantity","unit_price","params","invoice_id","delete","headers","token","length","icon","id","quantitySold","unitPrice","post","text"],"sources":["C:\\Users\\Polisoft WEB\\Documents\\MuhasebeProgrami\\clientapp\\src\\components\\Invoices\\InvoiceDeleteComponent.vue"],"sourcesContent":["<template>\r\n    <table class=\"table table-dark\">\r\n        <thead>\r\n            <tr>\r\n                <th class=\"p-3\">Product Name</th>\r\n                <th>Invoice Id</th>\r\n                <th>Supplier</th>\r\n                <th>Customer</th>\r\n                <th>Payment</th>\r\n                <th>Statu</th>\r\n                <th>Type</th>\r\n                <th>Quantity</th>\r\n                <th>Unit Price</th>\r\n                <th>Total Amount</th>\r\n                <th>Delete</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr v-for=\"(invoice, index) in invoices\" :key=\"index\">\r\n                <td class=\"p-3\">{{ invoice.product_name }}</td>\r\n                <td>{{ invoice.invoice_id }}</td>\r\n                <td>{{ invoice.supplier_name }}</td>\r\n                <td>{{ invoice.customer_name }}</td>\r\n                <td>{{ invoice.payment_method }}</td>\r\n                <td>{{ invoice.invoice_statu }}</td>\r\n                <td>{{ invoice.invoice_type }}</td>\r\n                <td>{{ invoice.quantity }}</td>\r\n                <td>{{ invoice.unit_price }}</td>\r\n                <td>{{ invoice.total_amount}}</td>\r\n                <td><button type=\"button\" class=\"btn btn-danger\" @click=\"deleteInvoice(invoice)\">Delete</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nexport default {\r\nname: \"InvoiceDeleteComponent\",\r\n    data(){\r\n        return{\r\n            invoices:[]\r\n        }\r\n    },\r\n    mounted(){\r\n        this.getListInvoice();\r\n    },\r\n    methods:{\r\n        getListInvoice()\r\n        {\r\n            axios.get('http://localhost:5280/api/invoice/invoice-list-all')\r\n            .then(response => {\r\n                this.invoices = response.data;\r\n            })\r\n            .catch(error => {\r\n                console.log(\"invoice listed error\",error)\r\n                swal({title:\"invoice listed error\"});\r\n            })\r\n        },\r\n        deleteInvoice(invoice){\r\n            this.updateStock(invoice.stock_id,invoice.quantity,invoice.unit_price);\r\n            console.log(invoice.stock_id,invoice.quantity,invoice.unit_price);\r\n            const params = {\r\n                invoice_id:invoice.invoice_id\r\n            };\r\n            console.log(\"Params being sent:\",params);\r\n            axios.delete('http://localhost:5280/api/invoice/invoice-delete',\r\n            {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                data:params\r\n            })\r\n            .then(response => {\r\n                if(response && response.data && response.data.token.length === 36)\r\n                {\r\n                    console.log(\"Succesfuly Deleted\", response)\r\n                    swal({title:'Successfuly Deleted'});\r\n                    this.getListInvoice();\r\n                }\r\n                else{\r\n                    console.log(\"Error Deleted\", response)\r\n                    swal({title:'Error Deleted'})\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error trying to delete:\",error)\r\n                swal({title:\"Error when trying to delete \",icon:\"error\"})\r\n            })\r\n        },\r\n        updateStock(id, quantitySold, unitPrice) {\r\n            const params = {\r\n                stock_id: id,\r\n                quantity: quantitySold,\r\n                unit_price: unitPrice\r\n            }\r\n            console.log(\"params değerleri:\"+params);\r\n            axios.post('http://localhost:5280/api/stock/stock-update-add',params, {headers: { 'Content-Type': 'application/json' }})\r\n            .then(response => {\r\n                console.log(\"Stock updated\", response.data);\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error updating stock\", error.response ? error.response.data : error);\r\n                swal({ title: \"Stock update failed\", text: \"Could not update stock\", icon: \"error\" });\r\n            });\r\n          }\r\n    }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}