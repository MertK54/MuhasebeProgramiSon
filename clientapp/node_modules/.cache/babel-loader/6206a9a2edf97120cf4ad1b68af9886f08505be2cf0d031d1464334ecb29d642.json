{"ast":null,"code":"import axios from 'axios';\nimport { Modal } from 'bootstrap';\nimport swal from 'sweetalert';\nexport default {\n  name: \"InvoiceUpdateComponent\",\n  data() {\n    return {\n      stocks: [],\n      selectedStock: {}\n    };\n  },\n  mounted() {\n    this.getStock();\n  },\n  methods: {\n    getStock() {\n      axios.get('http://localhost:5280/api/stock/stock-get').then(response => {\n        console.log(response.data);\n        this.stocks = response.data;\n      }).catch(error => {\n        console.log(\"Stock Not Get\", error);\n      });\n    },\n    openUpdateModal(stock) {\n      this.selectedStock = {\n        ...stock\n      };\n      const modal = new Modal(document.getElementById('updateModal'));\n      modal.show();\n    },\n    updateStock() {\n      axios.post(\"http://localhost:5280/api/stock/stock-update\", this.selectedStock).then(response => {\n        if (response.data.token.length === 36) {\n          swal({\n            title: \"Stok succesfully updated\",\n            icon: \"success\"\n          });\n          this.getStock();\n          const modal = Modal.getInstance(document.getElementById('updateModal'));\n          modal.hide();\n        }\n      }).catch(error => {\n        console.log(\"Update fail\", error);\n        swal({\n          title: \"Stock not updated\",\n          text: \"Error when updated stock\",\n          icon: \"warning\",\n          dangerMode: true\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Modal","swal","name","data","stocks","selectedStock","mounted","getStock","methods","get","then","response","console","log","catch","error","openUpdateModal","stock","modal","document","getElementById","show","updateStock","post","token","length","title","icon","getInstance","hide","text","dangerMode"],"sources":["C:\\Users\\Polisoft WEB\\Documents\\MuhasebeProgrami\\clientapp\\src\\components\\Invoices\\InvoiceUpdateComponent.vue"],"sourcesContent":["<template>\r\n    <table class=\"table table-dark\">\r\n        <thead>\r\n            <tr>\r\n                <th class=\"p-3\">Product Name</th>\r\n                <th>Supplier</th>\r\n                <th>Supplier Id</th>\r\n                <th>Quantity</th>\r\n                <th>Unit Price</th>\r\n                <th>Update</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr v-for=\"(invoice, index) in invoices\" :key=\"index\">\r\n                <td class=\"p-3\">{{ invoice.product_name }}</td>\r\n                <td>{{ invoice.invoice_id }}</td>\r\n                <td>{{ invoice.supplier_name }}</td>\r\n                <td>{{ invoice.supplier_id }}</td>\r\n                <td>{{ invoice.customer_id }}</td>\r\n                <td>{{ invoice.invoice_type }}</td>\r\n                <td>{{ invoice.quantity }}</td>\r\n                <td>{{ invoice.unit_price }}</td>\r\n                <td>{{ invoice.total_amount}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <div class=\"modal fade\" id=\"updateModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">Update Stock</h5>\r\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <form @submit.prevent=\"updateStock\" style=\"color:black\">\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"name\" class=\"form-label\">Product Name</label>\r\n                            <input type=\"text\" v-model=\"selectedStock.product_name\" class=\"form-control\" id=\"product_name\">\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"address\" class=\"form-label\">Invoice Type</label>\r\n                            <input type=\"text\" v-model=\"selectedStock.invoice_type\" class=\"form-control\" id=\"quantity\">\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"address\" class=\"form-label\">Quantity</label>\r\n                            <input type=\"text\" v-model=\"selectedStock.quantity\" class=\"form-control\" id=\"quantity\">\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"address\" class=\"form-label\">Unit Price</label>\r\n                            <input type=\"text\" v-model=\"selectedStock.unit_price\" class=\"form-control\" id=\"unit_price\">\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { Modal } from 'bootstrap';\r\nimport swal from 'sweetalert';\r\nexport default {\r\n    name: \"InvoiceUpdateComponent\",\r\n    data() {\r\n        return {\r\n            stocks: [],\r\n            selectedStock: {}\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getStock();\r\n    },\r\n    methods: {\r\n        getStock() {\r\n            axios.get('http://localhost:5280/api/stock/stock-get')\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    this.stocks = response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"Stock Not Get\", error);\r\n                });\r\n        },\r\n        openUpdateModal(stock) {\r\n            this.selectedStock = { ...stock };\r\n            const modal = new Modal(document.getElementById('updateModal'));\r\n            modal.show();\r\n        },\r\n        updateStock() {\r\n            axios.post(\"http://localhost:5280/api/stock/stock-update\", this.selectedStock)\r\n                .then(response => {\r\n                    if(response.data.token.length === 36){\r\n                        swal({title: \"Stok succesfully updated\",icon: \"success\"});\r\n                        this.getStock();\r\n                        const modal = Modal.getInstance(document.getElementById('updateModal'));\r\n                        modal.hide();\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"Update fail\", error);\r\n                    swal({title: \"Stock not updated\",text: \"Error when updated stock\",icon: \"warning\",dangerMode: true});\r\n                });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"],"mappings":"AA4DA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,KAAI,QAAS,WAAW;AACjC,OAAOC,IAAG,MAAO,YAAY;AAC7B,eAAe;EACXC,IAAI,EAAE,wBAAwB;EAC9BC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE,CAAC;IACpB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,QAAQ,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACLD,QAAQA,CAAA,EAAG;MACPR,KAAK,CAACU,GAAG,CAAC,2CAA2C,EAChDC,IAAI,CAACC,QAAO,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACR,IAAI,CAAC;QAC1B,IAAI,CAACC,MAAK,GAAIO,QAAQ,CAACR,IAAI;MAC/B,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;QACZH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEE,KAAK,CAAC;MACvC,CAAC,CAAC;IACV,CAAC;IACDC,eAAeA,CAACC,KAAK,EAAE;MACnB,IAAI,CAACZ,aAAY,GAAI;QAAE,GAAGY;MAAM,CAAC;MACjC,MAAMC,KAAI,GAAI,IAAIlB,KAAK,CAACmB,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAAC;MAC/DF,KAAK,CAACG,IAAI,CAAC,CAAC;IAChB,CAAC;IACDC,WAAWA,CAAA,EAAG;MACVvB,KAAK,CAACwB,IAAI,CAAC,8CAA8C,EAAE,IAAI,CAAClB,aAAa,EACxEK,IAAI,CAACC,QAAO,IAAK;QACd,IAAGA,QAAQ,CAACR,IAAI,CAACqB,KAAK,CAACC,MAAK,KAAM,EAAE,EAAC;UACjCxB,IAAI,CAAC;YAACyB,KAAK,EAAE,0BAA0B;YAACC,IAAI,EAAE;UAAS,CAAC,CAAC;UACzD,IAAI,CAACpB,QAAQ,CAAC,CAAC;UACf,MAAMW,KAAI,GAAIlB,KAAK,CAAC4B,WAAW,CAACT,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAAC;UACvEF,KAAK,CAACW,IAAI,CAAC,CAAC;QAChB;MACJ,CAAC,EACAf,KAAK,CAACC,KAAI,IAAK;QACZH,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEE,KAAK,CAAC;QACjCd,IAAI,CAAC;UAACyB,KAAK,EAAE,mBAAmB;UAACI,IAAI,EAAE,0BAA0B;UAACH,IAAI,EAAE,SAAS;UAACI,UAAU,EAAE;QAAI,CAAC,CAAC;MACxG,CAAC,CAAC;IACV;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}