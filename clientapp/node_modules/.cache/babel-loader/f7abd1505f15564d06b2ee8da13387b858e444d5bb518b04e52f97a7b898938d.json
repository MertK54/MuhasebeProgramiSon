{"ast":null,"code":"import axios from 'axios';\nimport swal from 'sweetalert';\nexport default {\n  name: \"InvoiceSaleReturnComponent\",\n  data() {\n    return {\n      invoices: [],\n      formData: {\n        product_name: '',\n        customer_id: 0,\n        supplier_id: 0,\n        stock_id: 0,\n        quantity: 0,\n        unit_price: 0.00,\n        total_amount: 0.00,\n        invo\n      }\n    };\n  },\n  mounted() {\n    this.getInvoice();\n  },\n  methods: {\n    getInvoice() {\n      const params = {\n        type: 'sale'\n      };\n      axios.post('http://localhost:5280/api/invoice/invoice-get-sale', params, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response != null && response.data != null) this.invoices = response.data;\n      }).catch(error => {\n        swal({\n          title: \"Sale return invoice not listed\",\n          text: \"Error when listing stock\",\n          icon: \"warning\",\n          dangerMode: true\n        });\n        console.error(\"stocks not get\", error);\n      });\n    },\n    returnSaleInvoice(invoice) {\n      this.formDataAddValue(invoice);\n      console.log(\"Form Data:\", this.formData);\n      const params = {\n        supplier_id: this.formData.supplier_id,\n        customer_id: this.formData.customer_id,\n        stock_id: this.formData.stock_id,\n        product_name: this.formData.product_name,\n        quantity: parseInt(this.formData.quantity, 10),\n        unit_price: parseFloat(this.formData.unit_price),\n        total_amount: parseFloat(this.formData.total_amount),\n        invoice_type: 'sale_return',\n        invoice_statu: this.formData.invoice_statu,\n        payment_method: this.formData.payment_method\n      };\n      console.log(\"Params being sent:\", params);\n      axios.post('http://localhost:5280/api/invoice/invoice-create-sale', params, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        swal({\n          title: \"Invoce created\",\n          icon: \"success\"\n        });\n        console.log(\"Invoce created\", response.data);\n        this.updateStock(this.formData.stock_id, params.quantity, params.unit_price);\n      }).catch(error => {\n        console.log(\"Error creating invoce\", error.response ? error.response.data : error);\n      });\n    },\n    formDataAddValue(invoice) {\n      this.formData.product_name = invoice.product_name, this.formData.supplier_name = invoice.supplier_name, this.formData.supplier_id = invoice.supplier_id, this.formData.quantity = invoice.quantity, this.formData.unit_price = invoice.unit_price, this.formData.total_amount = invoice.quantity * invoice.unit_price;\n      this.formData.stock_id = invoice.stock_id;\n      this.formData.customer_id = invoice.customer_id;\n    },\n    updateStock(id, quantitySold, unitPrice) {\n      const params = {\n        stock_id: id,\n        quantity: quantitySold,\n        unit_price: unitPrice\n      };\n      console.log(\"params value:\" + params);\n      axios.post('http://localhost:5280/api/stock/stock-update-add', params, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log(\"Stock updated\", response.data);\n      }).catch(error => {\n        console.log(\"Error updating stock\", error.response ? error.response.data : error);\n        swal({\n          title: \"Stock update failed\",\n          text: \"Could not update stock\",\n          icon: \"error\"\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","swal","name","data","invoices","formData","product_name","customer_id","supplier_id","stock_id","quantity","unit_price","total_amount","invo","mounted","getInvoice","methods","params","type","post","headers","then","response","catch","error","title","text","icon","dangerMode","console","returnSaleInvoice","invoice","formDataAddValue","log","parseInt","parseFloat","invoice_type","invoice_statu","payment_method","updateStock","supplier_name","id","quantitySold","unitPrice"],"sources":["C:\\Users\\Polisoft WEB\\Documents\\MuhasebeProgrami\\clientapp\\src\\components\\Invoices\\InvoiceSaleReturnComponent.vue"],"sourcesContent":["    <template>\n    <table class=\"table table-dark\">\n        <thead>\n            <tr>\n                <th class=\"p-3\">Invoice Id</th>\n                <th>Product Name</th>\n                <th>Supplier</th>\n                <th>Customer</th>\n                <th>Quantity</th>\n                <th>Unit Price</th>\n                <th>Total Amount</th>\n                <th>Return</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"(invoice, index) in invoices\" :key=\"index\">\n                <td class=\"p-3\">{{ invoice.invoice_id }}</td>\n                <td>{{ invoice.product_name }}</td>\n                <td>{{ invoice.supplier_name }}</td>\n                <td>{{ invoice.customer_name }}</td>\n                <td>{{ invoice.payment_method }}</td>\n                <td>{{ invoice.invoice_statu }}</td>\n                <td>{{ invoice.quantity }}</td>\n                <td>{{ invoice.unit_price }}</td>\n                <td>{{ invoice.total_amount }}</td>\n                <td><button class=\"btn btn-primary\" @click=\"returnSaleInvoice(invoice)\">Return</button></td>\n            </tr>\n        </tbody>\n    </table>\n    </template>\n\n    <script>\n    import axios from 'axios';\n    import swal from 'sweetalert';\n\n    export default {\n    name: \"InvoiceSaleReturnComponent\",\n    data() {\n        return {\n            invoices: [],\n            formData:{\n                product_name:'',\n                customer_id:0,\n                supplier_id:0,\n                stock_id:0,\n                quantity:0,\n                unit_price:0.00,\n                total_amount:0.00,\n                invo\n            }\n        }\n    },\n    mounted() {\n        this.getInvoice();\n    },\n    methods: {\n        getInvoice() {\n            const params = {\n                type: 'sale'\n            };\n            axios.post('http://localhost:5280/api/invoice/invoice-get-sale', params, { headers: { 'Content-Type': 'application/json' } })\n                .then(response => {\n                    if (response != null && response.data != null)\n                        this.invoices = response.data; \n                })\n                .catch(error => {\n                    swal({ title: \"Sale return invoice not listed\", text: \"Error when listing stock\", icon: \"warning\", dangerMode: true });\n                    console.error(\"stocks not get\", error);\n                });\n        },\n        returnSaleInvoice(invoice){\n            this.formDataAddValue(invoice);\n            console.log(\"Form Data:\", this.formData);\n            const params = {\n                supplier_id: this.formData.supplier_id,\n                customer_id: this.formData.customer_id,\n                stock_id:this.formData.stock_id,\n                product_name: this.formData.product_name,\n                quantity: parseInt(this.formData.quantity, 10),\n                unit_price: parseFloat(this.formData.unit_price),\n                total_amount:parseFloat(this.formData.total_amount),\n                invoice_type:'sale_return',\n                invoice_statu:this.formData.invoice_statu,\n                payment_method:this.formData.payment_method\n            };\n            console.log(\"Params being sent:\", params);\n            axios.post('http://localhost:5280/api/invoice/invoice-create-sale', params, {headers: { 'Content-Type': 'application/json' }})\n            .then(response => {\n                swal({title:\"Invoce created\",icon:\"success\"})\n                console.log(\"Invoce created\", response.data);\n                this.updateStock(this.formData.stock_id, params.quantity ,params.unit_price);\n            })\n            .catch(error => {\n                console.log(\"Error creating invoce\", error.response ? error.response.data : error); \n                });\n        },\n        formDataAddValue(invoice){\n            this.formData.product_name = invoice.product_name,\n            this.formData.supplier_name = invoice.supplier_name,\n            this.formData.supplier_id = invoice.supplier_id,\n            this.formData.quantity = invoice.quantity,\n            this.formData.unit_price = invoice.unit_price,\n            this.formData.total_amount = invoice.quantity * invoice.unit_price;\n            this.formData.stock_id = invoice.stock_id;\n            this.formData.customer_id = invoice.customer_id;\n        },\n        updateStock(id, quantitySold, unitPrice) {\n            const params = {\n                stock_id: id,\n                quantity: quantitySold,\n                unit_price: unitPrice,\n            }\n            console.log(\"params value:\"+params);\n            axios.post('http://localhost:5280/api/stock/stock-update-add',params, {headers: { 'Content-Type': 'application/json' }})\n            .then(response => {\n                console.log(\"Stock updated\", response.data);\n            })\n            .catch(error => {\n                console.log(\"Error updating stock\", error.response ? error.response.data : error);\n                swal({ title: \"Stock update failed\", text: \"Could not update stock\", icon: \"error\" });\n            });\n        }\n    }\n}\n    </script>\n<style>\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}