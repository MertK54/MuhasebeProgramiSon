{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Name\"), _createElementVNode(\"th\", null, \"Email\"), _createElementVNode(\"th\", null, \"Phone\"), _createElementVNode(\"th\", null, \"Address\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.suppliers, supplier => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: supplier.supplier_id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(supplier.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(supplier.e_mail), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(supplier.phone_number), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(supplier.adress), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","suppliers","supplier","key","supplier_id","_toDisplayString","name","e_mail","phone_number","adress"],"sources":["/Users/mertkezer/Documents/MuhasebeProgrami/clientapp/src/components/Suppliers/SupplierListComponent.vue"],"sourcesContent":["<template>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Phone</th>\n                <th>Address</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"supplier in suppliers\" :key=\"supplier.supplier_id\"> \n                <td>{{ supplier.name }}</td>\n                <td>{{ supplier.e_mail }}</td>\n                <td>{{ supplier.phone_number }}</td>\n                <td>{{ supplier.adress }}</td>\n            </tr>\n        </tbody>\n    </table>\n    </template>\n    \n    <script>\n    import axios from 'axios';\n    import swal from 'sweetalert';\n    \n    export default {\n        name: \"SupplierListComponent\",\n        data() {\n            return {\n                suppliers: []\n            }\n        },\n        mounted() {\n            this.getSupplier();\n        },\n        methods: {\n            getSupplier() {\n                axios.get('http://localhost:5280/api/supplier/supplier-get')\n                .then(response => {\n                    console.log(response.data);\n                    if (response != null && response.data != null) {\n                        this.suppliers = response.data;\n                    }\n                })\n                .catch(error => {\n                    console.error(\"Error while fetching suppliers:\", error);\n                    swal({\n                        title: \"Supplier not listed\",\n                        text: \"Error when listing suppliers\",\n                        icon: \"warning\",\n                        dangerMode: true\n                    });\n                });\n            }\n        }\n    }\n    </script>\n    \n    <style>\n    </style>\n    "],"mappings":";;EACWA,KAAK,EAAC;AAAO;;uBAApBC,mBAAA,CAiBQ,SAjBRC,UAiBQ,G,0BAhBJC,mBAAA,CAOQ,gBANJA,mBAAA,CAKK,aAJDA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAgB,YAAZ,SAAO,E,wBAGnBA,mBAAA,CAOQ,iB,kBANJF,mBAAA,CAKKG,SAAA,QAhBjBC,WAAA,CAWmCC,KAAA,CAAAC,SAAS,EAArBC,QAAQ;yBAAnBP,mBAAA,CAKK;MAL8BQ,GAAG,EAAED,QAAQ,CAACE;QAC7CP,mBAAA,CAA4B,YAAAQ,gBAAA,CAArBH,QAAQ,CAACI,IAAI,kBACpBT,mBAAA,CAA8B,YAAAQ,gBAAA,CAAvBH,QAAQ,CAACK,MAAM,kBACtBV,mBAAA,CAAoC,YAAAQ,gBAAA,CAA7BH,QAAQ,CAACM,YAAY,kBAC5BX,mBAAA,CAA8B,YAAAQ,gBAAA,CAAvBH,QAAQ,CAACO,MAAM,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}