{"ast":null,"code":"import axios from 'axios';\nimport vSelect from 'vue-select';\nimport 'vue-select/dist/vue-select.css';\nimport swal from 'sweetalert';\nexport default {\n  name: \"InvoicePurchaseComponent\",\n  components: {\n    vSelect\n  },\n  data() {\n    return {\n      formData: {\n        customer_id: null,\n        supplier_id: null,\n        product_name: '',\n        quantity: '',\n        unit_price: '',\n        invoice_type: 'purchase'\n      },\n      supplier: [],\n      data: [],\n      stocks: [],\n      customer: []\n    };\n  },\n  created() {\n    this.getStock();\n    this.getCustomer();\n  },\n  methods: {\n    getStock() {\n      axios.get('http://localhost:5280/api/stock/stock-get').then(response => {\n        if (response && response.data) {\n          this.stocks = response.data;\n          this.supplier = response.data.map(item => ({\n            id: item.supplier_id,\n            name: item.supplier_name\n          }));\n        }\n      });\n    },\n    getCustomer() {\n      axios.get('http://localhost:5280/api/customer/customer-get').then(response => {\n        if (response != null && response.data != null) this.customer = response.data.map(item => ({\n          id: item.customer_id,\n          name: item.name\n        }));\n      }).catch(error => {\n        swal({\n          title: \"customer not listed\",\n          text: \"error when listing customer\",\n          icon: \"warning\",\n          dangerMode: true\n        });\n        console.error(\"customers not get\", error);\n      });\n    },\n    createPurchaseInvoice() {\n      console.log(\"Form Data:\", this.formData);\n      const stockToUpdate = this.stocks.find(stock => stock.product_name === this.formData.product_name);\n      if (stockToUpdate && this.formData.quantity > stockToUpdate.quantity) {\n        swal({\n          title: \"Stock Limit Exceeded\",\n          text: `You cannot sell more than ${stockToUpdate.quantity} items.`,\n          icon: \"warning\",\n          dangerMode: true\n        });\n        return;\n      }\n      const params = {\n        supplier_id: this.formData.supplier_id,\n        customer_id: this.formData.customer_id,\n        product_name: this.formData.product_name,\n        quantity: parseInt(this.formData.quantity, 10),\n        unit_price: parseFloat(this.formData.unit_price),\n        type: 'purchase'\n      };\n      console.log(\"Params being sent:\", params);\n      axios.post('http://localhost:5280/api/invoice/invoice-create-purchase', params, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        swal({\n          title: \"Invoce created\",\n          icon: \"success\"\n        });\n        console.log(\"Invoce created\", response.data);\n        const stockToUpdate = this.stocks.find(stock => stock.product_name == params.product_name);\n        console.log(stockToUpdate);\n        if (stockToUpdate) {\n          this.updateStock(stockToUpdate.stock_id, params.quantity, params.unit_price);\n        } else {\n          console.error(\"Stock not found for product:\", params.product_name);\n        }\n      }).catch(error => {\n        console.log(\"Error creating invoce\", error.response ? error.response.data : error);\n      });\n    },\n    updateStock(id, quantitySold, unitPrice) {\n      const params = {\n        stock_id: id,\n        quantity: quantitySold,\n        unit_price: unitPrice\n      };\n      console.log(\"params deÄŸerleri:\" + params);\n      axios.post('http://localhost:5280/api/stock/stock-update', params, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log(\"Stock updated\", response.data);\n      }).catch(error => {\n        console.log(\"Error updating stock\", error.response ? error.response.data : error);\n        swal({\n          title: \"Stock update failed\",\n          text: \"Could not update stock\",\n          icon: \"error\"\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","vSelect","swal","name","components","data","formData","customer_id","supplier_id","product_name","quantity","unit_price","invoice_type","supplier","stocks","customer","created","getStock","getCustomer","methods","get","then","response","map","item","id","supplier_name","catch","error","title","text","icon","dangerMode","console","createPurchaseInvoice","log","stockToUpdate","find","stock","params","parseInt","parseFloat","type","post","headers","updateStock","stock_id","quantitySold","unitPrice"],"sources":["C:\\Users\\Polisoft WEB\\Documents\\MuhasebeProgrami\\clientapp\\src\\components\\Invoices\\InvoicePurchaseComponent.vue"],"sourcesContent":["<template>\n    <h1>Create Purchase Invoice</h1>\n    <form @submit.prevent=\"createPurchaseInvoice\" class=\"mx-auto my-3 p-5 bg-dark\" style=\"width: 50rem; border: 1px solid grey;\">\n      <div class=\"row mb-3\">\n        <div class=\"col-md-6\">\n          <label for=\"supplier\" class=\"form-label\">Select Supplier:</label>\n          <v-select :options=\"supplier\" label=\"name\" v-model=\"formData.supplier_id\" :reduce=\"supplier => supplier.id\" placeholder=\"Select Supplier\" style=\"color: black;\"></v-select>\n        </div>\n  \n        <div class=\"col-md-6\">\n          <label for=\"customer\" class=\"form-label\">Select Customer:</label>\n          <v-select :options=\"customer\" label=\"name\" v-model=\"formData.customer_id\" :reduce=\"customer => customer.id\" placeholder=\"Select Customer\" style=\"color: black;\"></v-select>\n        </div>\n      </div>\n      \n      <div class=\"row mb-3\">\n        <label for=\"product_name\" class=\"form-label\">Select Product:</label>\n        <v-select :options=\"stocks\" label=\"product_name\" v-model=\"formData.product_name\" :reduce=\"stock => stock.product_name\" placeholder=\"Select Product\" style=\"color: black;\"></v-select>\n      </div>\n  \n      <div class=\"row mb-3\">\n        <div class=\"col-md-12\">\n          <label for=\"validationDefault02\" class=\"form-label\">Quantity</label>\n          <small v-if=\"currentStock\" style=\"color: grey;\">Available stock: {{ currentStock.quantity }}</small>\n          <input type=\"number\" class=\"form-control\" v-model=\"formData.quantity\" required />\n        </div>\n        \n        <div class=\"col-md-12 mt-2\">\n          <label for=\"validationDefault03\" class=\"form-label\">Unit Price</label>\n          <input type=\"number\" class=\"form-control\" v-model=\"formData.unit_price\" required step=\"0.01\" />\n        </div>\n      </div>\n  \n      <div class=\"row\">\n        <div class=\"col-6\">\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" required />\n            <label class=\"form-check-label\" for=\"invalidCheck2\"> Agree to terms and conditions </label>\n          </div>\n        </div>\n        <div class=\"col-12 mt-2\">\n          <button class=\"btn btn-primary\" type=\"submit\">Create</button>\n        </div>\n      </div>\n    </form>\n  </template>\n  \n    \n  <script>\n  import axios from 'axios';\n  import vSelect from 'vue-select';\n  import 'vue-select/dist/vue-select.css';\n  import swal from 'sweetalert';\n  export default {\n    name: \"InvoicePurchaseComponent\",\n    components:{\n      vSelect,\n    },\n      data(){\n          return {\n              formData:{\n                  customer_id:null,\n                  supplier_id:null,\n                  product_name:'',\n                  quantity:'',\n                  unit_price:'',\n                  invoice_type:'purchase'\n              },\n              supplier:[],\n              data:[],\n              stocks: [],\n              customer:[]\n          }\n      },\n      created(){\n          this.getStock();\n          this.getCustomer();\n      },\n      methods:{\n          getStock(){\n              axios.get('http://localhost:5280/api/stock/stock-get')\n              .then(response => {\n                if (response && response.data) {\n                  this.stocks = response.data;\n                  this.supplier = response.data.map(item => ({ id: item.supplier_id, name: item.supplier_name }))\n                }\n              });\n          },\n          getCustomer(){\n              axios.get('http://localhost:5280/api/customer/customer-get')\n              .then(response => {\n                if(response != null && response.data != null)\n                  this.customer = response.data.map(item => ({ id:item.customer_id,name: item.name }))\n              })\n              .catch(error => {\n                swal({title:\"customer not listed\",text: \"error when listing customer\",icon:\"warning\",dangerMode:true})\n                console.error(\"customers not get\", error);\n              });\n          },\n          createPurchaseInvoice() {\n            console.log(\"Form Data:\", this.formData);\n            const stockToUpdate = this.stocks.find(stock => stock.product_name === this.formData.product_name);\n            if (stockToUpdate && this.formData.quantity > stockToUpdate.quantity) {\n                swal({\n                    title: \"Stock Limit Exceeded\",\n                    text: `You cannot sell more than ${stockToUpdate.quantity} items.`,\n                    icon: \"warning\",\n                    dangerMode: true\n                });\n                return; \n            }\n              const params = {\n                supplier_id: this.formData.supplier_id,\n                customer_id: this.formData.customer_id,\n                product_name: this.formData.product_name,\n                quantity: parseInt(this.formData.quantity, 10),\n                unit_price: parseFloat(this.formData.unit_price),\n                type:'purchase'\n              };\n              console.log(\"Params being sent:\", params);\n              axios.post('http://localhost:5280/api/invoice/invoice-create-purchase', params, {headers: { 'Content-Type': 'application/json' }})\n              .then(response => {\n                swal({title:\"Invoce created\",icon:\"success\"})\n                console.log(\"Invoce created\", response.data);\n                const stockToUpdate = this.stocks.find(stock => stock.product_name == params.product_name);\n                console.log(stockToUpdate);\n                  if (stockToUpdate) {\n                      this.updateStock(stockToUpdate.stock_id, params.quantity, params.unit_price);\n                  } else {\n                      console.error(\"Stock not found for product:\", params.product_name);\n                  }\n              })\n              .catch(error => {\n                  console.log(\"Error creating invoce\", error.response ? error.response.data : error); \n              });\n          },\n          updateStock(id, quantitySold, unitPrice) {\n            const params = {\n                stock_id: id,\n                quantity: quantitySold,\n                unit_price: unitPrice\n            }\n            console.log(\"params deÄŸerleri:\"+params);\n            axios.post('http://localhost:5280/api/stock/stock-update',params, {headers: { 'Content-Type': 'application/json' }})\n            .then(response => {\n                console.log(\"Stock updated\", response.data);\n            })\n            .catch(error => {\n                console.log(\"Error updating stock\", error.response ? error.response.data : error);\n                swal({ title: \"Stock update failed\", text: \"Could not update stock\", icon: \"error\" });\n            });\n          }\n      }\n  }\n  </script>\n    \n  <style>\n  </style>\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}